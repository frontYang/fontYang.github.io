<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YNode</title>
  
  <subtitle>记录学习的技能/遇到的问题</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://frontyang.github.io/"/>
  <updated>2018-03-31T15:13:43.403Z</updated>
  <id>https://frontyang.github.io/</id>
  
  <author>
    <name>frongYang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>canvas学习与实践</title>
    <link href="https://frontyang.github.io/2018/03/31/canvas/"/>
    <id>https://frontyang.github.io/2018/03/31/canvas/</id>
    <published>2018-03-31T12:40:33.000Z</published>
    <updated>2018-03-31T15:13:43.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、canvas-与-SVG的区别"><a href="#一、canvas-与-SVG的区别" class="headerlink" title="一、canvas 与 SVG的区别"></a>一、canvas 与 SVG的区别</h2><ul><li>canvas和svg之间一个重要的区别：使用canvas来绘制图形是通过调用它提供的方法，而使用svg绘制图形是通过构建一棵XML元素树来实现</li></ul><h2 id="二、canvas基础"><a href="#二、canvas基础" class="headerlink" title="二、canvas基础"></a>二、canvas基础</h2><blockquote><p>note: (摘自《javascript权威指南》)</p></blockquote><h3 id="1、定义上下文对象"><a href="#1、定义上下文对象" class="headerlink" title="1、定义上下文对象"></a>1、定义上下文对象</h3><ul><li>大部分画布绘制的API都不是在<code>&lt;canvas&gt;</code>元素自身上定义的，而是定义在一个”绘制上下文”对象上，获取该对象可以通过调用画布的getContext()方法。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>);</span><br><span class="line"><span class="keyword">let</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span><br></pre></td></tr></table></figure></li></ul><h3 id="2、-绘制线段和填充多边形"><a href="#2、-绘制线段和填充多边形" class="headerlink" title="2、 绘制线段和填充多边形"></a>2、 绘制线段和填充多边形</h3><ul><li>图形属性<ul><li>fillStyle：填充颜色/渐变/图案等样式</li><li>font：绘制文本css样式</li><li>globalAlpha：绘制像素时要添加的透明度 (?)</li><li>globalCompositeOperation：如何合并新的像素点和下面的像素点 (?)</li><li>lineCap：如何渲染线段末端</li><li>lineJoin：如何渲染顶点</li><li>lineWidth：外框线的宽度</li><li>miterLimit：紧急斜接顶点的最大长度 (?)</li><li>textAlign：文本水平对齐方式</li><li>textBaseline：文本垂直对齐方式</li><li>shadowBlur：阴影的清晰或模糊程度</li><li>shadowColor：下拉阴影的颜色</li><li>shadowOffsetX：阴影的水平偏移量</li><li>shadowOffsetY：阴影的垂直偏移量</li><li>strokeStyle：勾勒线段时的颜色/渐变/图案等样式</li></ul></li><li>案例（最后一个没有效果？）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个以(x, y)为中心， 半径为r的规则n边形</span></span><br><span class="line"><span class="comment">// 每个顶点都是均匀分布在圆周上</span></span><br><span class="line"><span class="comment">// 将第一个顶点放置在最上面，或者指定一定角度</span></span><br><span class="line"><span class="comment">// 除非最后一个参数是true，否则顺时针旋转</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">polygon</span>(<span class="params">c, n, x, y, r, angle, counterclockwise</span>)</span>&#123;</span><br><span class="line">    angle = angle || <span class="number">0</span>;</span><br><span class="line">    counterclockwise = counterclockwise || <span class="literal">false</span>;</span><br><span class="line">    ctx.moveTo(x + r * <span class="built_in">Math</span>.sin(angle), <span class="comment">// 从第一个顶点开始一条新的路径</span></span><br><span class="line">               y - r * <span class="built_in">Math</span>.cos(angle)); <span class="comment">// 使用三角形计算位置</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> delta = <span class="number">2</span> * <span class="built_in">Math</span>.PI / n; <span class="comment">// 两个顶点之间的夹角</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; n; i ++)&#123; <span class="comment">// 循环剩余的每个顶点</span></span><br><span class="line">        angle += counterclockwise ? -delta : delta; <span class="comment">// 调整角度</span></span><br><span class="line">        ctx.lineTo(x + r * <span class="built_in">Math</span>.sin(angle), <span class="comment">// 以下个顶点为端点添加线段</span></span><br><span class="line">                   y - r * <span class="built_in">Math</span>.cos(angle));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.closePath(); <span class="comment">// 将最后一个顶点和起点连接起来</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ctx.beginPath();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> x = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">polygon(ctx, <span class="number">3</span>, x, <span class="number">70</span>, <span class="number">50</span>); <span class="comment">// 三角形</span></span><br><span class="line">polygon(ctx, <span class="number">4</span>, x + x * <span class="number">2</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="built_in">Math</span>.PI / <span class="number">4</span>); <span class="comment">// 正方形</span></span><br><span class="line">polygon(ctx, <span class="number">5</span>, x + x * <span class="number">3</span>, <span class="number">55</span>, <span class="number">50</span>); <span class="comment">// 五边形</span></span><br><span class="line">polygon(ctx, <span class="number">6</span>, x + x * <span class="number">4</span>, <span class="number">53</span>, <span class="number">50</span>, <span class="built_in">Math</span>.PI / <span class="number">6</span>); <span class="comment">// 六边形</span></span><br><span class="line">polygon(ctx, <span class="number">4</span>, x + x * <span class="number">5</span>, <span class="number">53</span>, <span class="number">20</span>, <span class="built_in">Math</span>.PI / <span class="number">4</span>, <span class="literal">true</span>); <span class="comment">// 六边形中的小正方形</span></span><br><span class="line"></span><br><span class="line">ctx.fillStyle() = <span class="string">'#ccc'</span>; <span class="comment">// 内部填充颜色</span></span><br><span class="line">ctx.stockStyle = <span class="string">'#oo8'</span>; <span class="comment">// 边框颜色</span></span><br><span class="line">ctx.lineWidth = <span class="number">5</span>; <span class="comment">// 边框跨度</span></span><br><span class="line"></span><br><span class="line">ctx.fill(); <span class="comment">// 填充</span></span><br><span class="line">ctx.stroke(); <span class="comment">// 勾勒外边框</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3、画布的尺寸与坐标"><a href="#3、画布的尺寸与坐标" class="headerlink" title="3、画布的尺寸与坐标"></a>3、画布的尺寸与坐标</h3><p><img src="/images/canvas/coordinate.png" alt="画布栅格（canvas grid）以及坐标空间"></p><p style="text-align: center;">(注：图片来自<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes" target="_blank" rel="noopener">MDN</a>)</p><h3 id="4、坐标系变换（占坑）"><a href="#4、坐标系变换（占坑）" class="headerlink" title="4、坐标系变换（占坑）"></a>4、坐标系变换（占坑）</h3><h3 id="5、绘制和填充曲线"><a href="#5、绘制和填充曲线" class="headerlink" title="5、绘制和填充曲线"></a>5、绘制和填充曲线</h3><ul><li>arc(ox, oy, radius, startRadian, endRadian, [true | false])： 在当前子路径中添加一条弧<ul><li>参数：<ul><li>ox: 圆心x坐标</li><li>oy: 圆心y坐标</li><li>radius: 半径</li><li>startRadian: 起始弧</li><li>endRadian: 结束弧</li><li>true: 逆时针 | false: 顺时针</li></ul></li></ul></li><li>arcTo(x1, y1, x2, y2, radius):绘制一条直线和一段圆弧(?)<ul><li>x1: 起点x坐标</li><li>y1: 起点y坐标</li><li>x2: 终点x坐标</li><li>y2: 终点y坐标</li><li>radius:半径</li></ul></li><li>bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)：实现在当前子路径中添加一个新的点，并利用三次贝塞尔曲线将它和当前点相连(?)<ul><li>cp1x: 第一个控制点x坐标</li><li>cp1y: 第一个控制点y坐标</li><li>cp2x: 第二个控制点x坐标</li><li>cp2y: 第二个控制点y坐标</li><li>x: 结束点x坐标</li><li>y: 结束点y坐标</li></ul></li><li><p>quadraticCurveTo(cpx, cpy, x, y)：与bezierCurveTo()类似，不同的是它使用的是二次贝塞尔曲线而不是三次贝塞尔曲线并且只有一个控制点(?)</p><ul><li>cpx: 控制点x坐标</li><li>cpy: 控制点y坐标</li><li>x: 结束点x坐标</li><li>y: 结束点y坐标</li></ul><ul><li>示例：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将角度转化成弧度制</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rads</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.PI * x / <span class="number">180</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ctx.beginPath();</span><br><span class="line">ctx.arc(<span class="number">75</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">0</span>, rads(<span class="number">360</span>), <span class="literal">false</span>); <span class="comment">// 圆心位于(75, 100), 半径为50, 从0°到360°顺时针旋转</span></span><br><span class="line">ctx.closePath();</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="/images/canvas/arc1.png" alt="绘制一个圆形"></p><p style="text-align: center;">(效果图)</p><h3 id="6、矩形"><a href="#6、矩形" class="headerlink" title="6、矩形"></a>6、矩形</h3><ul><li>fillRect(x,y,width,height): 使用当前点的fillStyle来填充指定的矩形<ul><li>参数:<ul><li>x:矩形左上角的x坐标</li><li>y: 矩形左上角的y坐标</li><li>width: 矩形的宽度</li><li>height: 矩形的高度</li></ul></li></ul></li><li>strokeRect(x,y,width,height): 使用当前的strokeStyle和其他线段的属性来勾勒指定矩形的外边框，参数与fillRect()相同</li><li>clearRect(x,y,width,height): 清除矩形，参数与fillRect()相同</li><li>rect(x,y,width,height): 绘制矩形，会对当前路径产生影响，会在指定的矩形添加到当前路径的子路径中，参数与fillRect()相同</li></ul><p>未完。。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、canvas-与-SVG的区别&quot;&gt;&lt;a href=&quot;#一、canvas-与-SVG的区别&quot; class=&quot;headerlink&quot; title=&quot;一、canvas 与 SVG的区别&quot;&gt;&lt;/a&gt;一、canvas 与 SVG的区别&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;canv
      
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="canvas" scheme="https://frontyang.github.io/tags/canvas/"/>
    
      <category term="html5" scheme="https://frontyang.github.io/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>gulp学习笔记</title>
    <link href="https://frontyang.github.io/2018/03/17/gulp/"/>
    <id>https://frontyang.github.io/2018/03/17/gulp/</id>
    <published>2018-03-17T08:18:08.000Z</published>
    <updated>2018-03-17T09:16:24.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><ul><li><code>yarn global add gulp</code></li><li>运行：<code>gulp tast名</code></li><li>项目目录结构(示例)<a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">+ src(项目原目录)</span><br><span class="line">  * images(图片)</span><br><span class="line">    - icon(需要生成精灵图的图片)</span><br><span class="line">      + icon1.png</span><br><span class="line">      + icon2.png</span><br><span class="line">    - pic.png</span><br><span class="line">  * js(页面js)</span><br><span class="line">    - block(公共js)</span><br><span class="line">      + common.js</span><br><span class="line">      + util.js</span><br><span class="line">    - index.js</span><br><span class="line">  * css(页面css)</span><br><span class="line">    - block(公共css)</span><br><span class="line">      + reset.scss</span><br><span class="line">      + header.scss</span><br><span class="line">    - index.scss</span><br><span class="line">  * components(公共模块)</span><br><span class="line">    - header.html</span><br><span class="line">    - footer.html</span><br><span class="line">  * index.html</span><br><span class="line">+ dist(生成目录，不需创建)</span><br><span class="line">  * images</span><br><span class="line">    - sprite.png</span><br><span class="line">    - pic.png</span><br><span class="line">  * js</span><br><span class="line">    - block</span><br><span class="line">      + common.js</span><br><span class="line">      + util.js</span><br><span class="line">    - index.js</span><br><span class="line">  * css</span><br><span class="line">    - block</span><br><span class="line">      + reset.css</span><br><span class="line">      + header.scss</span><br><span class="line">      + sprites.css</span><br><span class="line">    - index.css</span><br><span class="line">  * index.html</span><br><span class="line">+ node_modules(node模块，不需创建)</span><br><span class="line">+ gulpfile.js(gulp配置js)</span><br><span class="line">+ package.json</span><br><span class="line">+ yarn.lock</span><br></pre></td></tr></table></figure></li></ul><h2 id="二、部分插件的安装和使用"><a href="#二、部分插件的安装和使用" class="headerlink" title="二、部分插件的安装和使用"></a>二、部分插件的安装和使用</h2><h3 id="1、browser-sync：自动刷新"><a href="#1、browser-sync：自动刷新" class="headerlink" title="1、browser-sync：自动刷新"></a>1、browser-sync：自动刷新</h3><ul><li>安装： <code>yarn add browser-sync</code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'browserSync'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    browserSync(&#123;</span><br><span class="line">        server: &#123;</span><br><span class="line">            baseDir: <span class="string">'dist'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2、处理css相关插件"><a href="#2、处理css相关插件" class="headerlink" title="2、处理css相关插件"></a>2、处理css相关插件</h3><ul><li>安装： <code>yarn add gulp-sass gulp-postcss autoprefixer del-gulpsass-blank-lines</code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sass = <span class="built_in">require</span>(<span class="string">'gulp-sass'</span>); <span class="comment">// 编译Sass</span></span><br><span class="line"><span class="keyword">const</span> postcss = <span class="built_in">require</span>(<span class="string">'gulp-postcss'</span>); <span class="comment">// 后处理器</span></span><br><span class="line"><span class="keyword">const</span> autoprefixer = <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>); <span class="comment">// 加前缀，与postcss配合使用</span></span><br><span class="line"><span class="keyword">const</span> dgbl = <span class="built_in">require</span>(<span class="string">"del-gulpsass-blank-lines"</span>); <span class="comment">// 删掉sass空行</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'sass'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/css/**/*.scss'</span>)</span><br><span class="line">  .pipe(sass(&#123;<span class="attr">outputStyle</span>: <span class="string">'compact'</span>&#125;).on(<span class="string">'error'</span>, sass.logError))</span><br><span class="line">  .pipe(dgbl())</span><br><span class="line">  .pipe(postcss([autoprefixer(&#123;<span class="attr">browsers</span>: [<span class="string">'last 2 versions'</span>, <span class="string">'Android &gt; 4.4'</span>,<span class="string">'iOS &gt;= 8'</span>, <span class="string">'Firefox &gt;= 20'</span>]&#125;)]))</span><br><span class="line">  .pipe(gulp.dest(<span class="string">'dist/css'</span>))</span><br><span class="line">  .pipe(browserSync.reload(&#123;  <span class="comment">// 只有被改变的地方局部刷新</span></span><br><span class="line">    stream: <span class="literal">true</span></span><br><span class="line">  &#125;))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="3、gulp-babel：es6转es5"><a href="#3、gulp-babel：es6转es5" class="headerlink" title="3、gulp-babel：es6转es5"></a>3、gulp-babel：es6转es5</h3><ul><li>安装： <code>yarn add gulp-babel</code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>); <span class="comment">// bable</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'babel'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/js/**/*.js'</span>)</span><br><span class="line">  .pipe(babel(&#123;</span><br><span class="line">    presets: [<span class="string">'@babel/env'</span>],</span><br><span class="line">    plugins: [<span class="string">'@babel/transform-runtime'</span>]</span><br><span class="line">  &#125;))</span><br><span class="line">  <span class="comment">// .pipe(uglify())</span></span><br><span class="line">  .pipe(gulp.dest(<span class="string">'dist/js'</span>))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="4、处理图片"><a href="#4、处理图片" class="headerlink" title="4、处理图片"></a>4、处理图片</h3><ul><li>安装： <code>yarn add gulp-imagemin gulp.spritesmith gulp-cache</code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>); <span class="comment">// 优化图片</span></span><br><span class="line"><span class="keyword">const</span> spritesmith = <span class="built_in">require</span>(<span class="string">'gulp.spritesmith'</span>); <span class="comment">// 图片精灵</span></span><br><span class="line"><span class="keyword">const</span> cache = <span class="built_in">require</span>(<span class="string">'gulp-cache'</span>); <span class="comment">// 缓存代理任务。，减少图片重复压缩</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'images'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/images/icon/*.png'</span>)</span><br><span class="line">    <span class="comment">// Caching images that ran through imagemin</span></span><br><span class="line">    .pipe(cache(imagemin(&#123;</span><br><span class="line">      interlaced: <span class="literal">true</span>,</span><br><span class="line">    &#125;)))</span><br><span class="line">    .pipe(spritesmith(&#123;</span><br><span class="line">        imgName:<span class="string">'images/sprite.png'</span>, <span class="comment">//合并后大图的名称</span></span><br><span class="line">        cssName:<span class="string">'css/block/sprite.css'</span>,</span><br><span class="line">        padding:<span class="number">2</span><span class="comment">// 每个图片之间的间距，默认为0px</span></span><br><span class="line">        <span class="comment">// cssTemplate:(data)=&gt;&#123; // 可以自定义输出格式</span></span><br><span class="line">        <span class="comment">// // data为对象，保存合成前小图和合成打大图的信息包括小图在大图之中的信息</span></span><br><span class="line">        <span class="comment">//    let arr = [],</span></span><br><span class="line">        <span class="comment">//         width = data.spritesheet.px.width,</span></span><br><span class="line">        <span class="comment">//         height = data.spritesheet.px.height,</span></span><br><span class="line">        <span class="comment">//         url =  data.spritesheet.image</span></span><br><span class="line">        <span class="comment">//     // console.log(data)</span></span><br><span class="line">        <span class="comment">//     data.sprites.forEach(function(sprite) &#123;</span></span><br><span class="line">        <span class="comment">//         arr.push(</span></span><br><span class="line">        <span class="comment">//             '.icon-'+sprite.name+</span></span><br><span class="line">        <span class="comment">//             '&#123;'+</span></span><br><span class="line">        <span class="comment">//                 'background: url('+url+') '+</span></span><br><span class="line">        <span class="comment">//                 'no-repeat '+</span></span><br><span class="line">        <span class="comment">//                 sprite.px.offset_x+' '+sprite.px.offset_y+';'+</span></span><br><span class="line">        <span class="comment">//                 'background-size: '+ width+' '+height+';'+</span></span><br><span class="line">        <span class="comment">//                 'width: '+sprite.px.width+';'+</span></span><br><span class="line">        <span class="comment">//                 'height: '+sprite.px.height+';'+</span></span><br><span class="line">        <span class="comment">//             '&#125;\n'</span></span><br><span class="line">        <span class="comment">//         )</span></span><br><span class="line">        <span class="comment">//     &#125;)</span></span><br><span class="line">        <span class="comment">//     // return "@fs:108rem;\n"+arr.join("")</span></span><br><span class="line">        <span class="comment">//     return arr.join('')</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &#125;))</span><br><span class="line"></span><br><span class="line">    .pipe(gulp.dest(<span class="string">'dist/'</span>))</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="5、gulp-content-includer：-include-公共模块"><a href="#5、gulp-content-includer：-include-公共模块" class="headerlink" title="5、gulp-content-includer： include 公共模块"></a>5、gulp-content-includer： include 公共模块</h3><ul><li>安装： <code>yarn add gulp-content-includer</code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> contentIncluder = <span class="built_in">require</span>(<span class="string">'gulp-content-includer'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'concat'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    gulp.src(<span class="string">'src/*.html'</span>)</span><br><span class="line">        .pipe(contentIncluder(&#123; <span class="comment">// 可以自定义</span></span><br><span class="line">            includerReg:<span class="regexp">/&lt;!\-\-\#include\s+virtual="([^"]+)"\-\-&gt;/g</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'dist/'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以使用 &lt;!--#include virtual="./components/header.html"--&gt; 方式来引入公共模块</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="6、清理生成文件"><a href="#6、清理生成文件" class="headerlink" title="6、清理生成文件"></a>6、清理生成文件</h3><ul><li>安装： <code>yarn add del</code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> del = <span class="built_in">require</span>(<span class="string">'del'</span>); <span class="comment">// 清理生成文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除 除了images/文件夹，dist下的任意文件</span></span><br><span class="line">gulp.task(<span class="string">'clean:dist'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> del.sync([<span class="string">'dist/**/*'</span>, <span class="string">'!dist/images'</span>, <span class="string">'!dist/images/**/*'</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在某些时候我们还是需要清除图片，所以clean任务我们还需要保留</span></span><br><span class="line">gulp.task(<span class="string">'clean'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> del.sync(<span class="string">'dist'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cache.clearAll(cb);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="7、组合任务"><a href="#7、组合任务" class="headerlink" title="7、组合任务"></a>7、组合任务</h3><ul><li>安装： <code>yarn add run-sequence</code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> runSequence = <span class="built_in">require</span>(<span class="string">'run-sequence'</span>); <span class="comment">// 按照指定顺序运行任务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听文件，刷新浏览器</span></span><br><span class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  gulp.watch(<span class="string">'src/scss/**/*.scss'</span>, [<span class="string">'sass'</span>]);</span><br><span class="line">  gulp.watch(<span class="string">'src/**/*.html'</span>, browserSync.reload);</span><br><span class="line">  gulp.watch(<span class="string">'src/js/**/*.js'</span>, browserSync.reload);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按顺序执行任务，放 [] 内的任务会同时执行</span></span><br><span class="line">gulp.task(<span class="string">'build'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">  runSequence(</span><br><span class="line">    <span class="string">'clean:dist'</span>,</span><br><span class="line">    [<span class="string">'sass'</span>,<span class="string">'babel'</span>,<span class="string">'concat'</span>,<span class="string">'images'</span>],</span><br><span class="line">    callback</span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">  runSequence([<span class="string">'sass'</span>, <span class="string">'babel'</span>, <span class="string">'browserSync'</span>, <span class="string">'concat'</span>, <span class="string">'images'</span>], <span class="string">'watch'</span>,</span><br><span class="line">    callback</span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><a href="https://www.cnblogs.com/Tom-yi/p/8036730.html" target="_blank" rel="noopener">参考连接</a><br><a href="https://github.com/frontYang/study/tree/master/gulp" target="_blank" rel="noopener">仓库地址</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、安装&quot;&gt;&lt;a href=&quot;#一、安装&quot; class=&quot;headerlink&quot; title=&quot;一、安装&quot;&gt;&lt;/a&gt;一、安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yarn global add gulp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;运行：&lt;code&gt;gulp tast名&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;项目目录结构(示例)
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="gulp" scheme="https://frontyang.github.io/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>iframe跨域问题</title>
    <link href="https://frontyang.github.io/2018/03/11/iframe/"/>
    <id>https://frontyang.github.io/2018/03/11/iframe/</id>
    <published>2018-03-11T08:01:06.000Z</published>
    <updated>2018-03-11T08:24:10.746Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、主域相同"><a href="#一、主域相同" class="headerlink" title="一、主域相同"></a>一、主域相同</h2><ul><li>子页面和父页面都加上 <code>document.domain = &quot;子页面域名&quot;</code><a id="more"></a></li></ul><hr><h2 id="二、跨全域高度自适应"><a href="#二、跨全域高度自适应" class="headerlink" title="二、跨全域高度自适应"></a>二、跨全域高度自适应</h2><h3 id="1、postMessage-不兼容ie8"><a href="#1、postMessage-不兼容ie8" class="headerlink" title="1、postMessage(不兼容ie8-)"></a>1、postMessage(不兼容ie8-)</h3><ul><li><p>父页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">onload</span>=<span class="string">"resizeCrossDomainIframe('iframepage', '子页面域名');"</span> <span class="attr">src</span>=<span class="string">"父页面"</span>)</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">function</span> <span class="attr">resizeCrossDomainIframe</span>(<span class="attr">id</span>, <span class="attr">other_domain</span>) &#123;</span></span><br><span class="line"><span class="tag">    <span class="attr">var</span> <span class="attr">iframe</span> = <span class="string">document.getElementById(id);</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    <span class="attr">window.addEventListener</span>('<span class="attr">message</span>', <span class="attr">function</span>(<span class="attr">event</span>) &#123;</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">if</span> (<span class="attr">event.origin</span> !== <span class="string">other_domain)</span> <span class="attr">return</span>; // <span class="attr">only</span> <span class="attr">accept</span> <span class="attr">messages</span> <span class="attr">from</span> <span class="attr">the</span> <span class="attr">specified</span> <span class="attr">domain</span></span></span><br><span class="line"><span class="tag">        <span class="attr">if</span> (<span class="attr">isNaN</span>(<span class="attr">event.data</span>)) <span class="attr">return</span>; // <span class="attr">only</span> <span class="attr">accept</span> <span class="attr">something</span> <span class="attr">which</span> <span class="attr">can</span> <span class="attr">be</span> <span class="attr">parsed</span> <span class="attr">as</span> <span class="attr">a</span> <span class="attr">number</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">var</span> <span class="attr">height</span> = <span class="string">parseInt(event.data)</span> + <span class="attr">32</span>; // <span class="attr">add</span> <span class="attr">some</span> <span class="attr">extra</span> <span class="attr">height</span> <span class="attr">to</span> <span class="attr">avoid</span> <span class="attr">scrollbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">iframe.height</span> = <span class="string">height</span> + "<span class="attr">px</span>";</span></span><br><span class="line"><span class="tag">    &#125;, <span class="attr">false</span>);</span></span><br><span class="line"><span class="tag">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>子页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"parent.postMessage(document.body.scrollHeight, '父页面域名');"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2、使用代理页面"><a href="#2、使用代理页面" class="headerlink" title="2、使用代理页面"></a>2、使用代理页面</h3><ul><li><p>父页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"parentPage"</span> <span class="attr">name</span>=<span class="string">"mainFrame"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">src</span>=<span class="string">"子页面"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>代理页面(与父页面同域名)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> b_iframe = <span class="built_in">window</span>.parent.parent.document.getElementById(<span class="string">"parentPage"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> hash_url = <span class="built_in">window</span>.location.hash;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (hash_url.indexOf(<span class="string">"#"</span>) &gt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> hash_width = hash_url.split(<span class="string">"#"</span>)[<span class="number">1</span>].split(<span class="string">"|"</span>)[<span class="number">0</span>] + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> hash_height = hash_url.split(<span class="string">"#"</span>)[<span class="number">1</span>].split(<span class="string">"|"</span>)[<span class="number">1</span>] + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="undefined">  b_iframe.style.width = hash_width;</span></span><br><span class="line"><span class="undefined">  b_iframe.style.height = hash_height;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>子页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"agentPage"</span> <span class="attr">height</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"0"</span> <span class="attr">src</span>=<span class="string">"中间页面"</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">(<span class="function"><span class="keyword">function</span> <span class="title">autoHeight</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> b_width = <span class="built_in">Math</span>.max(<span class="built_in">document</span>.body.scrollWidth, <span class="built_in">document</span>.body.clientWidth);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> b_height = <span class="built_in">Math</span>.max(<span class="built_in">document</span>.body.scrollHeight, <span class="built_in">document</span>.body.clientHeight);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> c_iframe = <span class="built_in">document</span>.getElementById(<span class="string">"agentPage"</span>);</span></span><br><span class="line"><span class="javascript">    c_iframe.src = c_iframe.src + <span class="string">"#"</span> + b_width + <span class="string">"|"</span> + b_height;</span></span><br><span class="line"><span class="undefined">&#125;)();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、主域相同&quot;&gt;&lt;a href=&quot;#一、主域相同&quot; class=&quot;headerlink&quot; title=&quot;一、主域相同&quot;&gt;&lt;/a&gt;一、主域相同&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;子页面和父页面都加上 &lt;code&gt;document.domain = &amp;quot;子页面域名&amp;quot;&lt;/code&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="javascript" scheme="https://frontyang.github.io/tags/javascript/"/>
    
      <category term="跨域" scheme="https://frontyang.github.io/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>常用css收集</title>
    <link href="https://frontyang.github.io/2018/03/11/css/"/>
    <id>https://frontyang.github.io/2018/03/11/css/</id>
    <published>2018-03-11T07:46:45.000Z</published>
    <updated>2018-03-11T08:23:50.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、-reset"><a href="#一、-reset" class="headerlink" title="一、 reset"></a>一、 reset</h2><a id="more"></a><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">'utf-8'</span>;</span><br><span class="line">@<span class="keyword">charset</span> <span class="string">"GBK"</span>;</span><br><span class="line"></span><br><span class="line">*&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>; <span class="attribute">-moz-box-sizing</span>: border-box; <span class="attribute">-webkit-box-sizing</span>: border-box; <span class="attribute">box-sizing</span>: border-box;<span class="attribute">-webkit-tap-highlight-color</span>:transparent;<span class="attribute">-webkit-touch-callout</span>:none;<span class="attribute">-webkit-text-size-adjust</span>:none; &#125;</span><br><span class="line">*<span class="selector-pseudo">:focus</span>,*<span class="selector-pseudo">:active</span> &#123;<span class="attribute">outline</span>:none;&#125;</span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;  <span class="attribute">height</span>:<span class="number">100%</span>;&#125;</span><br><span class="line"><span class="selector-tag">body</span>&#123; <span class="attribute">width</span>: <span class="number">100%</span>;<span class="attribute">font-family</span>: \<span class="number">5</span>FAE\<span class="number">8</span>F6F\<span class="number">96</span>C5\<span class="number">9</span>ED1,\<span class="number">5</span>B8B\<span class="number">4</span>F53;<span class="attribute">-webkit-user-select</span>:none;&#125;</span><br><span class="line"><span class="selector-tag">p</span>,<span class="selector-tag">a</span>,<span class="selector-tag">span</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">b</span>,<span class="selector-tag">input</span>,<span class="selector-tag">dt</span>,<span class="selector-tag">dd</span> &#123; <span class="attribute">color</span>: <span class="number">#666</span>;<span class="attribute">font-size</span>: <span class="number">0.9rem</span>;&#125;</span><br><span class="line"><span class="selector-tag">ul</span>, <span class="selector-tag">ol</span>&#123;<span class="attribute">list-style</span>:none;&#125;</span><br><span class="line"><span class="selector-tag">img</span>&#123;<span class="attribute">border</span>:none;&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">text-decoration</span>:none;&#125;</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;<span class="attribute">resize</span>:none;&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=button]</span>,<span class="selector-tag">button</span>&#123;<span class="attribute">text-align</span>: center; <span class="attribute">background</span>: none; <span class="attribute">border</span>: <span class="number">0</span>; <span class="attribute">outline</span>: none; &#125;</span><br><span class="line"><span class="selector-tag">input</span> &#123; <span class="attribute">background</span>: white; <span class="attribute">border</span>: none; <span class="attribute">outline</span>: none;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*占位符颜色*/</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span>, <span class="selector-tag">textarea</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123; <span class="attribute">color</span>:<span class="number">#ccc</span>; &#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-moz-placeholder</span>, <span class="selector-tag">textarea</span><span class="selector-pseudo">:-moz-placeholder</span> &#123; <span class="attribute">color</span>:<span class="number">#ccc</span>; &#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span>, <span class="selector-tag">textarea</span><span class="selector-pseudo">::-moz-placeholder</span> &#123; <span class="attribute">color</span>: <span class="number">#ccc</span>; &#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-ms-input-placeholder</span>, <span class="selector-tag">textarea</span><span class="selector-pseudo">:-ms-input-placeholder</span> &#123; <span class="attribute">color</span>: <span class="number">#ccc</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*占位符点击消失*/</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span><span class="selector-pseudo">::-webkit-input-placeholder</span>&#123;<span class="attribute">text-indent</span>: -<span class="number">999em</span>; <span class="attribute">z-index</span>: -<span class="number">20</span>; &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="二、function"><a href="#二、function" class="headerlink" title="二、function"></a>二、function</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 浮动 */</span></span><br><span class="line"><span class="selector-class">.fl</span> &#123; <span class="attribute">float</span>: left <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.fr</span> &#123; <span class="attribute">float</span>: right <span class="meta">!important</span>; &#125;</span><br><span class="line"><span class="selector-class">.clear</span> &#123; <span class="attribute">clear</span>: both; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 功能 */</span></span><br><span class="line"><span class="selector-class">.hide</span> &#123; <span class="attribute">display</span>:none <span class="meta">!important</span>; &#125;<span class="comment">/*隐藏*/</span></span><br><span class="line"><span class="selector-class">.ellipsis1</span> &#123; <span class="attribute">overflow</span>:hidden;<span class="attribute">-o-text-overflow</span>:ellipsis;<span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">white-space</span>:nowrap;<span class="attribute">word-break</span>:keep-all; &#125; <span class="comment">/* 字数省略 */</span></span><br><span class="line"><span class="selector-class">.ellipsis2</span> &#123;<span class="attribute">display</span>: -webkit-box; <span class="attribute">-webkit-line-clamp</span>:<span class="number">2</span>; <span class="attribute">overflow</span>: hidden; <span class="attribute">-webkit-box-orient</span>: vertical; <span class="attribute">text-overflow</span>: ellipsis;&#125; <span class="comment">/* 两行字数省略 */</span></span><br><span class="line"><span class="selector-class">.keep</span> &#123; <span class="attribute">position</span>:fixed <span class="meta">!important</span>;<span class="attribute">border-bottom</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid <span class="meta">!important</span>; &#125; <span class="comment">/*滚动保持*/</span></span><br><span class="line"><span class="selector-class">.mask</span> &#123;<span class="attribute">display</span>: none;<span class="attribute">position</span>: fixed;<span class="attribute">left</span>: <span class="number">0</span>;<span class="attribute">z-index</span>: <span class="number">11</span>;<span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">height</span>: <span class="number">100%</span>;<span class="attribute">background-color</span>:<span class="built_in">rgba</span>(0, 0, 0, 0.4);&#125;<span class="comment">/*遮罩层*/</span></span><br></pre></td></tr></table></figure><hr><h2 id="三、skin"><a href="#三、skin" class="headerlink" title="三、skin"></a>三、skin</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 效果 */</span></span><br><span class="line"><span class="selector-class">.shadow</span>,<span class="selector-class">.all-shadow</span> * &#123;<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> .<span class="number">3rem</span> <span class="number">#ddd</span> <span class="meta">!important</span>;&#125;</span><br><span class="line"><span class="selector-class">.gradient</span>,<span class="selector-class">.all-gradient</span> * &#123;<span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(top, #fff4f4,#fff);&#125;</span><br><span class="line"><span class="selector-class">.radius</span>,<span class="selector-class">.all-radius</span> * &#123; <span class="attribute">border-radius</span>: .<span class="number">2em</span>;&#125;</span><br><span class="line"><span class="selector-class">.left-radius</span> &#123;<span class="attribute">border-top-left-radius</span>: .<span class="number">2em</span>;<span class="attribute">border-bottom-left-radius</span>: .<span class="number">2em</span>;&#125;</span><br><span class="line"><span class="selector-class">.right-radius</span> &#123;<span class="attribute">border-top-right-radius</span>: .<span class="number">2em</span>;<span class="attribute">border-bottom-right-radius</span>: .<span class="number">2em</span>;&#125;</span><br><span class="line"><span class="selector-class">.top-radius</span> &#123;<span class="attribute">border-top-left-radius</span>: .<span class="number">2em</span>;<span class="attribute">border-top-right-radius</span>: .<span class="number">2em</span>;&#125;</span><br><span class="line"><span class="selector-class">.alpha</span>&#123;<span class="attribute">filter</span>:<span class="built_in">alpha</span>(opacity=50); <span class="attribute">-moz-opacity</span>:<span class="number">0.5</span>; <span class="attribute">-khtml-opacity</span>: <span class="number">0.5</span>; <span class="attribute">opacity</span>: <span class="number">0.5</span>;&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="四、arrow"><a href="#四、arrow" class="headerlink" title="四、arrow"></a>四、arrow</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 纯css实现箭头样式 u:上 r:右 d:下 l:左; S*/</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实心箭头</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.icon-arrA</span>&#123;<span class="attribute">display</span>: inline-block;<span class="comment">/* ie7下需要 加上inline-block 才生效,ie6不支持*/</span> <span class="attribute">font-size</span>: <span class="number">0</span>; <span class="attribute">line-height</span>: <span class="number">0</span>; <span class="attribute">overflow</span>: hidden; &#125;</span><br><span class="line"><span class="selector-class">.icon-arrA-u</span>&#123;<span class="attribute">border-width</span>: <span class="number">8px</span>; <span class="attribute">border-style</span>: solid; <span class="attribute">border-color</span>: transparent transparent <span class="number">#e6e6e6</span> transparent; &#125;</span><br><span class="line"><span class="selector-class">.icon-arrA-d</span>&#123;<span class="attribute">border-width</span>: <span class="number">8px</span>; <span class="attribute">border-style</span>: solid; <span class="attribute">border-color</span>: <span class="number">#e6e6e6</span> transparent transparent transparent; &#125;</span><br><span class="line"><span class="selector-class">.icon-arrA-l</span>&#123;<span class="attribute">border-width</span>: <span class="number">8px</span>; <span class="attribute">border-style</span>: solid; <span class="attribute">border-color</span>: transparent <span class="number">#e6e6e6</span> transparent transparent; &#125;</span><br><span class="line"><span class="selector-class">.icon-arrA-r</span>&#123;<span class="attribute">border-width</span>: <span class="number">8px</span>; <span class="attribute">border-style</span>: solid; <span class="attribute">border-color</span>: transparent transparent transparent <span class="number">#e6e6e6</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 边框箭头 兼容webkit</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.icon-arrB</span>&#123;<span class="attribute">display</span>: inline-block; <span class="attribute">width</span>: <span class="number">8px</span>; <span class="attribute">height</span>: <span class="number">8px</span>; <span class="attribute">font-size</span>: <span class="number">0</span>; <span class="attribute">overflow</span>: hidden; <span class="attribute">background-color</span>: transparent; <span class="attribute">border-width</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">0</span> <span class="number">0</span>; <span class="attribute">border-style</span>: solid; <span class="attribute">border-color</span>: <span class="number">#e6e6e6</span>; &#125;</span><br><span class="line"><span class="selector-class">.icon-arrB-u</span>&#123;<span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(-45deg); <span class="attribute">-moz-transform</span>: <span class="built_in">rotate</span>(-45deg); <span class="attribute">-ms-transform</span>: <span class="built_in">rotate</span>(-45deg); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-45deg); &#125;</span><br><span class="line"><span class="selector-class">.icon-arrB-d</span>&#123;<span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(135deg); <span class="attribute">-moz-transform</span>: <span class="built_in">rotate</span>(135deg); <span class="attribute">-ms-transform</span>: <span class="built_in">rotate</span>(135deg); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(135deg); &#125;</span><br><span class="line"><span class="selector-class">.icon-arrB-l</span>&#123;<span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(45deg); <span class="attribute">-moz-transform</span>: <span class="built_in">rotate</span>(45deg); <span class="attribute">-ms-transform</span>: <span class="built_in">rotate</span>(45deg); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(45deg); &#125;</span><br><span class="line"><span class="selector-class">.icon-arrB-r</span>&#123;<span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(-135deg); <span class="attribute">-moz-transform</span>: <span class="built_in">rotate</span>(-135deg); <span class="attribute">-ms-transform</span>: <span class="built_in">rotate</span>(-135deg); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(45deg); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 边框箭头：兼容 ie（不包括ie6）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.arr-wrap</span>&#123;<span class="attribute">display</span>: inline-block; <span class="attribute">position</span>: relative; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.icon-arrA</span>&#123;<span class="attribute">position</span>: absolute; <span class="attribute">left</span>: <span class="number">0</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-u</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-r</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-d</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-l</span>&#123;<span class="attribute">z-index</span>: <span class="number">1</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-u</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-d</span>&#123;<span class="attribute">top</span>: <span class="number">2px</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-u</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-d</span>&#123;<span class="attribute">top</span>: <span class="number">0</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-u</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-r</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-d</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-l</span>&#123;<span class="attribute">z-index</span>: <span class="number">0</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-r</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-l</span>&#123;<span class="attribute">left</span>: <span class="number">0</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-r</span>, <span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-l</span>&#123;<span class="attribute">left</span>: <span class="number">2px</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-u</span>&#123;<span class="attribute">border-bottom-color</span>: <span class="number">#fff</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-u</span>&#123;<span class="attribute">border-bottom-color</span>: <span class="number">#e6e6e6</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-r</span>&#123;<span class="attribute">border-left-color</span>: <span class="number">#fff</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-r</span>&#123;<span class="attribute">border-left-color</span>: <span class="number">#e6e6e6</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-d</span>&#123;<span class="attribute">border-top-color</span>: <span class="number">#fff</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-d</span>&#123;<span class="attribute">border-top-color</span>: <span class="number">#ddd</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s1</span><span class="selector-class">.icon-arrA-l</span>&#123;<span class="attribute">border-right-color</span>: <span class="number">#fff</span>; &#125;</span><br><span class="line"><span class="selector-class">.arr-wrap</span> <span class="selector-class">.s2</span><span class="selector-class">.icon-arrA-l</span>&#123;<span class="attribute">border-right-color</span>: <span class="number">#e6e6e6</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 箭头边框阴影 */</span></span><br><span class="line"><span class="selector-class">.arr-wrap-su</span>&#123;<span class="attribute">width</span>: <span class="number">20px</span>;<span class="attribute">height</span>: <span class="number">20px</span>;&#125;</span><br><span class="line"><span class="selector-class">.arr-wrap-su</span><span class="selector-pseudo">::after</span>&#123;<span class="attribute">content</span>: <span class="string">''</span>; <span class="attribute">position</span>: absolute; <span class="attribute">z-index</span>: -<span class="number">1</span>; <span class="attribute">width</span>: <span class="number">8px</span>; <span class="attribute">height</span>: <span class="number">8px</span>; <span class="attribute">background</span>: <span class="number">#fff</span>; <span class="attribute">left</span>: <span class="number">4px</span>; <span class="attribute">top</span>: <span class="number">12px</span>; <span class="attribute">border-width</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">0</span> <span class="number">0</span>; <span class="attribute">border-style</span>: solid; <span class="attribute">border-color</span>: <span class="number">#e6e6e6</span>; <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(-45deg); <span class="attribute">-moz-transform</span>: <span class="built_in">rotate</span>(-45deg); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-45deg); <span class="attribute">box-shadow</span>: <span class="number">2px</span> -<span class="number">2px</span> <span class="number">5px</span> <span class="number">#e6e6e6</span>; <span class="attribute">-webkit-box-shadow</span>: <span class="number">2px</span> -<span class="number">2px</span> <span class="number">5px</span> <span class="number">#e6e6e6</span>; <span class="attribute">-moz-box-shadow</span>: <span class="number">2px</span> -<span class="number">2px</span> <span class="number">5px</span> <span class="number">#e6e6e6</span>; &#125;</span><br><span class="line"><span class="comment">/* 纯css实现箭头样式 E*/</span></span><br></pre></td></tr></table></figure><hr><h2 id="五、ie6兼容问题"><a href="#五、ie6兼容问题" class="headerlink" title="五、ie6兼容问题"></a>五、ie6兼容问题</h2><ul><li><p>链接伪类（:hover）CSS背景图片有闪动</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if IE 6]&gt;&lt;script&gt;document.execCommand("BackgroundImageCache", false, true)&lt;/script&gt;&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>border兼容transparent</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_border-color:tomato;_filter:chroma(color=tomato);</span><br></pre></td></tr></table></figure></li><li><p>兼容fixed</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.fixed</span>&#123;<span class="attribute">position</span>:fixed; <span class="attribute">top</span>:<span class="number">35%</span>; <span class="attribute">right</span>:<span class="number">0</span>; <span class="attribute">_position</span>:absolute; <span class="attribute">_top</span>:<span class="built_in">expression</span>(offsetParent.scrollTop+100); <span class="attribute">_right</span>:<span class="built_in">expression</span>(offsetParent.scrollRight);&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、-reset&quot;&gt;&lt;a href=&quot;#一、-reset&quot; class=&quot;headerlink&quot; title=&quot;一、 reset&quot;&gt;&lt;/a&gt;一、 reset&lt;/h2&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="css" scheme="https://frontyang.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="https://frontyang.github.io/2018/03/11/gitskill/"/>
    <id>https://frontyang.github.io/2018/03/11/gitskill/</id>
    <published>2018-03-11T07:19:58.000Z</published>
    <updated>2018-03-11T08:23:57.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、创建版本库"><a href="#一、创建版本库" class="headerlink" title="一、创建版本库"></a>一、创建版本库</h2><ul><li>初始化一个Git仓库，使用 <code>git init</code> 命令</li><li>添加文件到仓库:<ul><li>第一步：使用命令 <code>git add [file]</code>，可以反复多次使用，添加多个文件</li><li>第二步：使用命令 <code>git commit</code></li></ul></li></ul><hr><a id="more"></a><h2 id="二、查看仓库目前状态"><a href="#二、查看仓库目前状态" class="headerlink" title="二、查看仓库目前状态"></a>二、查看仓库目前状态</h2><ul><li><code>git status</code>:掌握工作区的状态,查看文件是否被修改过(但还没有准备提交的修改)</li><li><code>git diff</code>:可以查看修改内容</li></ul><hr><h2 id="三、版本回退"><a href="#三、版本回退" class="headerlink" title="三、版本回退"></a>三、版本回退</h2><ul><li>HEAD指向的版本就是当前版本，git允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code></li><li><code>git log</code>查看提交历史，以便会退到哪个版本</li><li><code>git reflog</code>查看命令历史，以便确定要回到未来哪个版本</li></ul><hr><h2 id="四、撤销修改"><a href="#四、撤销修改" class="headerlink" title="四、撤销修改"></a>四、撤销修改</h2><ul><li><code>git checkout -- file</code>:直接丢弃工作区的修改</li><li>丢弃暂存区的修改:用<code>git reset HEAD file</code>回到上一步</li><li>已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库</li></ul><hr><h2 id="五、删除文件"><a href="#五、删除文件" class="headerlink" title="五、删除文件"></a>五、删除文件</h2><ul><li>第一步：<code>git rm [file]</code></li><li>第二步：<code>git commit</code></li></ul><hr><h2 id="六、添加远程库"><a href="#六、添加远程库" class="headerlink" title="六、添加远程库"></a>六、添加远程库</h2><ul><li>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code></li><li>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容</li><li>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改</li><li>ps:由于公司防火墙通过ssh不能连接github，需要设置http代理来连接<ul><li>设置代理：<code>git config --global http.proxy 192.168.xx.xxx:xxxx</code></li><li>移除代理：<code>git config --system --unset http.proxy</code></li></ul></li></ul><hr><h2 id="七、从远程库克隆"><a href="#七、从远程库克隆" class="headerlink" title="七、从远程库克隆"></a>七、从远程库克隆</h2><ul><li><code>git clone https://github.com/xx/xx.git</code></li></ul><hr><h2 id="八、分支管理"><a href="#八、分支管理" class="headerlink" title="八、分支管理"></a>八、分支管理</h2><ul><li>查看分支:<code>git branch</code></li><li>创建分支：<code>git branch [name]</code></li><li>切换分支：<code>git checkout [name]</code></li><li>创建+切换分支：<code>git checkout -b [name]</code></li><li>合并某分支到当前分支：<code>git merge [name]</code></li><li>删除分支：<code>git branch -d [name]</code></li></ul><hr><h2 id="九、修改文件后提交-并提交到github-步骤："><a href="#九、修改文件后提交-并提交到github-步骤：" class="headerlink" title="九、修改文件后提交 并提交到github 步骤："></a>九、修改文件后提交 并提交到github 步骤：</h2><ul><li>创建并切换分支: <code>git checkout -b [name]</code></li><li>添加修改过的文件: <code>git add [file]</code></li><li>提交文件: <code>git commit -m &quot;描述&quot;</code></li><li>切换到master分支: <code>git checkout [name]</code></li><li>合并修改文件的分支到当前分支: <code>git merge [name]</code></li><li>删除修改文件的分支: <code>git branch -d [name]</code></li><li>提交到远程库: <code>git push origin master</code></li></ul><p><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">参考</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、创建版本库&quot;&gt;&lt;a href=&quot;#一、创建版本库&quot; class=&quot;headerlink&quot; title=&quot;一、创建版本库&quot;&gt;&lt;/a&gt;一、创建版本库&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;初始化一个Git仓库，使用 &lt;code&gt;git init&lt;/code&gt; 命令&lt;/li&gt;
&lt;li&gt;添加文件到仓库:&lt;ul&gt;
&lt;li&gt;第一步：使用命令 &lt;code&gt;git add [file]&lt;/code&gt;，可以反复多次使用，添加多个文件&lt;/li&gt;
&lt;li&gt;第二步：使用命令 &lt;code&gt;git commit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="git" scheme="https://frontyang.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>javascript常用方法收集</title>
    <link href="https://frontyang.github.io/2018/03/11/javascript-function/"/>
    <id>https://frontyang.github.io/2018/03/11/javascript-function/</id>
    <published>2018-03-11T06:41:40.000Z</published>
    <updated>2018-03-11T08:28:51.152Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、获取id和ClassName"><a href="#一、获取id和ClassName" class="headerlink" title="一、获取id和ClassName"></a>一、获取id和ClassName</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取id</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getId</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">typeof</span> id == <span class="string">"object"</span>) ? id : <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取ClassName</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getElementsByClassName</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tags = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'*'</span>) || <span class="built_in">document</span>.all;</span><br><span class="line">    <span class="keyword">var</span> els = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tags.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (tags.className) &#123;</span><br><span class="line">            <span class="keyword">var</span> cs = tags.className.split(<span class="string">' '</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; cs.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (name == cs[j]) &#123;</span><br><span class="line">                    els.push(tags);</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> els</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解决IE8之类不支持getElementsByClassName</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">document</span>.getElementsByClassName) &#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementsByClassName = <span class="function"><span class="keyword">function</span>(<span class="params">className, element</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> children = (element || <span class="built_in">document</span>).getElementsByTagName(<span class="string">'*'</span>);</span><br><span class="line">        <span class="keyword">var</span> elements = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; children.length; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> child = children[i];</span><br><span class="line">            <span class="keyword">var</span> classNames = child.className.split(<span class="string">' '</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; classNames.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (classNames[j] == className) &#123;</span><br><span class="line">                    elements.push(child);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> elements;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h2 id="二、获取页面常用高度及兼容"><a href="#二、获取页面常用高度及兼容" class="headerlink" title="二、获取页面常用高度及兼容"></a>二、获取页面常用高度及兼容</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 浏览器窗口可视区域大小（不包括工具栏和滚动条等边线）</span></span><br><span class="line"><span class="keyword">var</span> client_w = <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line"><span class="keyword">var</span> client_h = <span class="built_in">document</span>.documentElement.clientHeight || <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 网页内容实际宽高（包括工具栏和滚动条等边线）</span></span><br><span class="line"><span class="keyword">var</span> scroll_w = <span class="built_in">document</span>.documentElement.scrollWidth || <span class="built_in">document</span>.body.scrollWidth;</span><br><span class="line"><span class="keyword">var</span> scroll_h = <span class="built_in">document</span>.documentElement.scrollHeight || <span class="built_in">document</span>.body.scrollHeight;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 网页内容实际宽高 (不包括工具栏和滚动条等边线）</span></span><br><span class="line"><span class="keyword">var</span> offset_w = <span class="built_in">document</span>.documentElement.offsetWidth || <span class="built_in">document</span>.body.offsetWidth;</span><br><span class="line"><span class="keyword">var</span> offset_h = <span class="built_in">document</span>.documentElement.offsetHeight || <span class="built_in">document</span>.body.offsetHeight;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 滚动的高度</span></span><br><span class="line"><span class="keyword">var</span> scroll_Top = <span class="built_in">document</span>.documentElement.scrollTop||<span class="built_in">document</span>.body.scrollTop;</span><br></pre></td></tr></table></figure><hr><h2 id="三、时间个性化输出"><a href="#三、时间个性化输出" class="headerlink" title="三、时间个性化输出"></a>三、时间个性化输出</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//时间个性化输出</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1、&lt; 60s, 显示为“刚刚”</span></span><br><span class="line"><span class="comment">2、&gt;= 1min &amp;&amp; &lt; 60 min, 显示与当前时间差“XX分钟前”</span></span><br><span class="line"><span class="comment">3、&gt;= 60min &amp;&amp; &lt; 1day, 显示与当前时间差“今天 XX:XX”</span></span><br><span class="line"><span class="comment">4、&gt;= 1day &amp;&amp; &lt; 1year, 显示日期“XX月XX日 XX:XX”</span></span><br><span class="line"><span class="comment">5、&gt;= 1year, 显示具体日期“XXXX年XX月XX日 XX:XX”</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timeFormat</span>(<span class="params">time</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(time),</span><br><span class="line">        curDate = <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">        year = date.getFullYear(),</span><br><span class="line">        month = date.getMonth() + <span class="number">10</span>,</span><br><span class="line">        day = date.getDate(),</span><br><span class="line">        hour = date.getHours(),</span><br><span class="line">        minute = date.getMinutes(),</span><br><span class="line">        curYear = curDate.getFullYear(),</span><br><span class="line">        curHour = curDate.getHours(),</span><br><span class="line">        timeStr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(year &lt; curYear)&#123;</span><br><span class="line">        timeStr = year +<span class="string">'年'</span>+ month +<span class="string">'月'</span>+ day +<span class="string">'日 '</span>+ hour +<span class="string">':'</span>+ minute;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> pastTime = curDate - date,</span><br><span class="line">            pastH = pastTime/<span class="number">3600000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(pastH &gt; curHour)&#123;</span><br><span class="line">              timeStr = month +<span class="string">'月'</span>+ day +<span class="string">'日 '</span>+ hour +<span class="string">':'</span>+ minute;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(pastH &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">              timeStr = <span class="string">'今天 '</span> + hour +<span class="string">':'</span>+ minute +<span class="string">'分'</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              <span class="keyword">var</span> pastM = curDate.getMinutes() - minute;</span><br><span class="line">              <span class="keyword">if</span>(pastM &gt; <span class="number">1</span>)&#123;</span><br><span class="line">                timeStr = pastM +<span class="string">'分钟前'</span>;</span><br><span class="line">              &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                timeStr = <span class="string">'刚刚'</span>;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> timeStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="四、返回顶部的通用方法"><a href="#四、返回顶部的通用方法" class="headerlink" title="四、返回顶部的通用方法"></a>四、返回顶部的通用方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回顶部的通用方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">backTop</span>(<span class="params">btnId</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(btnId);</span><br><span class="line">    <span class="keyword">var</span> d = <span class="built_in">document</span>.documentElement;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="built_in">document</span>.body;</span><br><span class="line">    <span class="built_in">window</span>.onscroll = set;</span><br><span class="line">    btn.style.display = <span class="string">'none'</span>;</span><br><span class="line">    btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        btn.style.display = <span class="string">'none'</span>;</span><br><span class="line">        <span class="built_in">window</span>.onscroll = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            d.scrollTop -= <span class="built_in">Math</span>.ceil((d.scrollTop + b.scrollTop) * <span class="number">0.1</span>);</span><br><span class="line">            b.scrollTop -= <span class="built_in">Math</span>.ceil((d.scrollTop + b.scrollTop) * <span class="number">0.1</span>);</span><br><span class="line">            <span class="keyword">if</span> ((d.scrollTop + b.scrollTop) == <span class="number">0</span>) clearInterval(btn.timer, <span class="built_in">window</span>.onscroll = set);</span><br><span class="line">            &#125;, <span class="number">10</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        btn.style.display = (d.scrollTop + b.scrollTop &gt; <span class="number">100</span>) ? <span class="string">'block'</span>: <span class="string">'none'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">backTop(<span class="string">'goTop'</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="五、事件委托"><a href="#五、事件委托" class="headerlink" title="五、事件委托"></a>五、事件委托</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//关于编写性能高效的javascript事件的技术</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn"</span> <span class="attr">name</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"BUTTON"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">id</span>=<span class="string">"aa"</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">evt</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> target = evt.target;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">switch</span>(target.id)&#123;</span></span><br><span class="line"><span class="javascript">                   <span class="keyword">case</span> <span class="string">"btn"</span>:</span></span><br><span class="line"><span class="javascript">                            alert(<span class="string">"button"</span>);</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">                   <span class="keyword">case</span> <span class="string">"aa"</span>:</span></span><br><span class="line"><span class="javascript">                            alert(<span class="string">"a"</span>);</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="undefined">         &#125;</span></span><br><span class="line"><span class="javascript">&#125;,<span class="literal">false</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="六、倒计时"><a href="#六、倒计时" class="headerlink" title="六、倒计时"></a>六、倒计时</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 活动倒计时</span></span><br><span class="line"><span class="comment"> * @param  &#123;string&#125; expiry endtine</span></span><br><span class="line"><span class="comment"> * @param  &#123;object&#125; obj    element</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTime</span>(<span class="params">expiry,obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(expiry == <span class="string">""</span> || !obj)&#123;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> expiry = expiry;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> a = now.getFullYear() + <span class="string">'.'</span> + (now.getMonth()+<span class="number">1</span>) + <span class="string">'.'</span> + now.getDate() +<span class="string">' '</span> + now.getHours() + <span class="string">':'</span> + now.getMinutes() + <span class="string">':'</span> + now.getSeconds();</span><br><span class="line">    <span class="keyword">var</span> b = expiry;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> startTime = <span class="keyword">new</span> <span class="built_in">Date</span>(a);</span><br><span class="line">    <span class="keyword">var</span> endTime = <span class="keyword">new</span> <span class="built_in">Date</span>(b);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( endTime &lt;= now) &#123;</span><br><span class="line">        obj.innerHTML = <span class="string">"距离活动开始还有&lt;i class='s-blue'&gt;00&lt;/i&gt;天&lt;i class='s-blue'&gt;00&lt;/i&gt;时&lt;i class='s-blue'&gt;00&lt;/i&gt;分&lt;i class='s-blue'&gt;00&lt;/i&gt;秒"</span>;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> days = (endTime - now) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>;</span><br><span class="line">        <span class="keyword">var</span> daysRound =    checkTime(<span class="built_in">Math</span>.floor(days));</span><br><span class="line">        <span class="keyword">var</span> hours = (endTime - now) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * daysRound);</span><br><span class="line">        <span class="keyword">var</span> hoursRound = checkTime(<span class="built_in">Math</span>.floor(hours));</span><br><span class="line">        <span class="keyword">var</span> minutes = (endTime - now) / <span class="number">1000</span> / <span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * daysRound) - (<span class="number">60</span> * hoursRound);</span><br><span class="line">        <span class="keyword">var</span> minutesRound = checkTime(<span class="built_in">Math</span>.floor(minutes));</span><br><span class="line">        <span class="keyword">var</span> seconds = (endTime - now) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * daysRound) - (<span class="number">60</span> * <span class="number">60</span> * hoursRound) - (<span class="number">60</span> * minutesRound);</span><br><span class="line">        <span class="keyword">var</span> secondsRound = checkTime(<span class="built_in">Math</span>.round(seconds));</span><br><span class="line">        obj.innerHTML = <span class="string">'距离活动开始还有:&lt;i class="s-blue"&gt;'</span>+ daysRound +<span class="string">'&lt;/i&gt;天&lt;i class="s-blue"&gt;'</span>+ hoursRound +<span class="string">'&lt;/i&gt;时&lt;i class="s-blue"&gt;'</span>+ minutesRound +<span class="string">'&lt;/i&gt;分&lt;i class="s-blue"&gt;'</span>+ secondsRound +<span class="string">'&lt;/i&gt;秒'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">_getTime</span>(<span class="params">expiry</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                getTime(expiry,obj)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        newtime = <span class="built_in">window</span>.setTimeout(_getTime(expiry,obj), <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="七、常用正则表达式"><a href="#七、常用正则表达式" class="headerlink" title="七、常用正则表达式"></a>七、常用正则表达式</h2><ul><li>正整数: <code>/^[0-9]*[1-9][0-9]*$/</code></li><li>负整数: <code>/^-[0-9]*[1-9][0-9]*$/</code></li><li>正浮点数: <code>/^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$/</code></li><li>负浮点数: <code>/^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/</code></li><li>浮点数: <code>/^(-?\d+)(\.\d+)?$/</code></li><li>email地址: <code>/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/</code></li><li>url地址: <code>/^[a-zA-z]+://(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$/</code></li><li>年/月/日（年-月-日、年.月.日）:<code>/^(19|20)\d\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$/</code></li><li>匹配中文字符: <code>/[\u4e00-\u9fa5]/</code></li><li>匹配空白行: <code>/\n\s*\r/</code></li><li>匹配中国邮政编码: <code>/[1-9]\d{5}(?!\d)/</code></li><li>匹配身份证(只是对格式进行检验)：<code>/\d{15}|\d{18}/</code></li><li>匹配国内电话号码：<code>/(\d{3}-|\d{4}-)?(\d{8}|\d{7})?/</code></li><li>匹配首尾空白字符: <code>/^\s*|\s*$/</code></li><li>匹配HTML标记：<code>/&lt; (\S*?)[^&gt;]*&gt;.*?|&lt; .*? /&gt;/</code></li><li>腾讯 QQ 号: <code>/^[1-9]*[1-9][0-9]*$/</code></li><li>中文、英文、数字及下划线: <code>/^[\u4e00-\u9fa5_a-zA-Z0-9]+$/</code></li></ul><hr><h2 id="八、增删class"><a href="#八、增删class" class="headerlink" title="八、增删class"></a>八、增删class</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否有这个class</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params"> elements,cName </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !!elements.className.match( <span class="keyword">new</span> <span class="built_in">RegExp</span>( <span class="string">"(\\s|^)"</span> + cName + <span class="string">"(\\s|$)"</span>) );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//添加class</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addClass</span>(<span class="params"> elements,cName </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( !hasClass( elements,cName ) )&#123;</span><br><span class="line">        elements.className += <span class="string">" "</span> + cName;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//移除class</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeClass</span>(<span class="params"> elements,cName </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( hasClass( elements,cName ) )&#123;</span><br><span class="line">        elements.className = elements.className.replace( <span class="keyword">new</span> <span class="built_in">RegExp</span>( <span class="string">"(\\s|^)"</span> + cName + <span class="string">"(\\s|$)"</span> ), <span class="string">" "</span> );</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="九、封装cookie组件"><a href="#九、封装cookie组件" class="headerlink" title="九、封装cookie组件"></a>九、封装cookie组件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Cookie = &#123;</span><br><span class="line">    <span class="comment">// 读取</span></span><br><span class="line">     get: <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> cookieStr = <span class="string">"; "</span>+<span class="built_in">document</span>.cookie+<span class="string">"; "</span>;</span><br><span class="line">        <span class="keyword">var</span> index = cookieStr.indexOf(<span class="string">"; "</span>+name+<span class="string">"="</span>);</span><br><span class="line">        <span class="keyword">if</span> (index!=<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> s = cookieStr.substring(index+name.length+<span class="number">3</span>,cookieStr.length);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">unescape</span>(s.substring(<span class="number">0</span>, s.indexOf(<span class="string">"; "</span>)));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 设置</span></span><br><span class="line">     set : <span class="function"><span class="keyword">function</span>(<span class="params">name,value,expires</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> expDays = expires*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">var</span> expDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        expDate.setTime(expDate.getTime()+expDays);</span><br><span class="line">        <span class="keyword">var</span> expString = expires ? <span class="string">"expires="</span>+expDate.toGMTString() : <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> pathString = <span class="string">";path=/"</span>;</span><br><span class="line">        <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + expString + pathString;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">     del : <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">var</span> s=<span class="keyword">this</span>.read(name);</span><br><span class="line">        <span class="keyword">if</span>(s!=<span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">document</span>.cookie= name + <span class="string">"="</span>+s+<span class="string">"expires="</span>+exp.toGMTString()+<span class="string">";path=/"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// demo:</span></span><br><span class="line">Cookie.set(<span class="string">"xxx"</span>, <span class="string">"xx"</span>, <span class="number">7</span>);</span><br><span class="line">alert(Cookie.get(<span class="string">"xxx"</span>));</span><br><span class="line">Cookie.del(<span class="string">"xxx"</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="十、类型转换函数"><a href="#十、类型转换函数" class="headerlink" title="十、类型转换函数"></a>十、类型转换函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Converter = &#123;</span><br><span class="line">    toDate: <span class="function"><span class="keyword">function</span>(<span class="params">strDate</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> sDate = strDate.replace(<span class="regexp">/(^\s+|\s+$)/g</span>,<span class="string">''</span>); <span class="comment">//去两边空格;</span></span><br><span class="line">        <span class="keyword">if</span>(sDate==<span class="string">''</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> s = sDate.replace(<span class="regexp">/[\d]&#123;4,4&#125;[\-/]&#123;1&#125;[\d]&#123;1,2&#125;[\-/]&#123;1&#125;[\d]&#123;1,2&#125;/g</span>, <span class="string">''</span>);</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="string">''</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> t=<span class="keyword">new</span> <span class="built_in">Date</span>(sDate.replace(<span class="regexp">/\-/g</span>,<span class="string">'/'</span>));</span><br><span class="line">            <span class="keyword">var</span> ar = sDate.split(<span class="regexp">/[-/:]/</span>);</span><br><span class="line">            <span class="keyword">if</span>(ar[<span class="number">0</span>] == t.getFullYear() &amp;&amp; ar[<span class="number">1</span>] == t.getMonth() + <span class="number">1</span> &amp;&amp; ar[<span class="number">2</span>] == t.getDate())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> t;   <span class="comment">//返回转化成功的日期对象</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Converter.toDate(<span class="string">"2014/9/2"</span>));</span><br><span class="line"><span class="built_in">console</span>.log(Converter.toDate(<span class="string">"2014-9-2"</span>));</span><br><span class="line"><span class="built_in">console</span>.log(Converter.toDate(<span class="string">"2014-09-02"</span>));</span><br><span class="line"><span class="comment">// Tue Sep 02 2014 00:00:00 GMT+0800 (中国标准时间)</span></span><br></pre></td></tr></table></figure><hr><h2 id="十一、动态脚本元素"><a href="#十一、动态脚本元素" class="headerlink" title="十一、动态脚本元素"></a>十一、动态脚本元素</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 加载JS文件</span></span><br><span class="line"><span class="comment"> * @param  &#123;string&#125;   url      资源url</span></span><br><span class="line"><span class="comment"> * @param  &#123;function&#125; callback 回调函数</span></span><br><span class="line"><span class="comment"> * @param  &#123;string&#125;   charset  资源编码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadScript</span>(<span class="params">url, callback, charset</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> oscript = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    <span class="keyword">if</span>(charset) oscript.charset = charset;</span><br><span class="line">    oscript.src = url;</span><br><span class="line">    oscript.onload = oscript.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.readyState || <span class="keyword">this</span>.readyState == <span class="string">'loaded'</span> || <span class="keyword">this</span>.readyState == <span class="string">'complete'</span>) &#123;</span><br><span class="line">            oscript.onload = oscript.onreadystatechange = <span class="literal">null</span>;</span><br><span class="line">            callback &amp;&amp; callback();</span><br><span class="line">            oscript.parentNode.removeChild(oscript);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">document</span>.body.insertBefore(oscript, <span class="built_in">document</span>.body.firstChild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="十二、js数组去重"><a href="#十二、js数组去重" class="headerlink" title="十二、js数组去重"></a>十二、js数组去重</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Unique = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 双重循环去重（经过测试超过两个重复的会留下两个）</span></span><br><span class="line"><span class="comment">     * @param arr</span></span><br><span class="line"><span class="comment">     * @returns &#123;*&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    dbloop: <span class="function"><span class="keyword">function</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> i,</span><br><span class="line">            j,</span><br><span class="line">            res = [];</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[i] === arr[j]) &#123;</span><br><span class="line">                    arr.splice(i, <span class="number">1</span>);<span class="comment">//当出现相同的元素时，删除重复的元素</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 哈希表形式</span></span><br><span class="line"><span class="comment">     * @param arr</span></span><br><span class="line"><span class="comment">     * @returns &#123;Array&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    hash: <span class="function"><span class="keyword">function</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> i,</span><br><span class="line">            hash = &#123;&#125;,</span><br><span class="line">            res = [];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查询hash对象是否存在当前元素(属性)</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!hash[arr[i]]) &#123;</span><br><span class="line">                res.push(arr[i]);</span><br><span class="line">                hash[arr[i]] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 借助indexOf方法</span></span><br><span class="line"><span class="comment">     * @param arr</span></span><br><span class="line"><span class="comment">     * @returns &#123;Array&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    indexOf: <span class="function"><span class="keyword">function</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> i,</span><br><span class="line">            res = [];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查询空数组里面是否已经存在这个值，不存在则推入</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (res.indexOf(arr[i]) === <span class="number">-1</span>) &#123;</span><br><span class="line">                res.push(arr[i]);</span><br><span class="line">                <span class="built_in">console</span>.log(arr[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="十三、删除左右空格"><a href="#十三、删除左右空格" class="headerlink" title="十三、删除左右空格"></a>十三、删除左右空格</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除左右空格</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">trim</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">''</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><hr><h2 id="十四、判断图片是否加载完"><a href="#十四、判断图片是否加载完" class="headerlink" title="十四、判断图片是否加载完"></a>十四、判断图片是否加载完</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">functionloadImage1(url,callback)&#123;</span><br><span class="line">  varimg = newImage();</span><br><span class="line">  img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//图片加载完成后执行的操作</span></span><br><span class="line">  &#125;</span><br><span class="line">  img.src = url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="十五、图片按某个尺寸等比缩放"><a href="#十五、图片按某个尺寸等比缩放" class="headerlink" title="十五、图片按某个尺寸等比缩放"></a>十五、图片按某个尺寸等比缩放</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">imgRatio</span>(<span class="params">picW,picH,maxWidth,maxHeight</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> Ratio,</span><br><span class="line">       wRatio = maxWidth / picW,</span><br><span class="line">       hRatio = maxHeight / picH;</span><br><span class="line">   <span class="keyword">if</span>(wRatio &lt; <span class="number">1</span> || hRatio &lt; <span class="number">1</span>)&#123;</span><br><span class="line">     Ratio = <span class="built_in">Math</span>.min(wRatio, hRatio);</span><br><span class="line">     picW = picW * Ratio;</span><br><span class="line">     picH = picH * Ratio;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="十六、遍历document-querySelectorAll-方法返回的结果"><a href="#十六、遍历document-querySelectorAll-方法返回的结果" class="headerlink" title="十六、遍历document.querySelectorAll()方法返回的结果"></a>十六、遍历document.querySelectorAll()方法返回的结果</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// forEach method, could be shipped as part of an Object Literal/Module</span></span><br><span class="line"><span class="keyword">var</span> forEach = <span class="function"><span class="keyword">function</span> (<span class="params">array, callback, scope</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">    callback.call(scope, i, array[i]); <span class="comment">// passes back stuff we need</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用法:</span></span><br><span class="line"><span class="comment">// optionally change the scope as final parameter too, like ECMA5</span></span><br><span class="line"><span class="keyword">var</span> myNodeList = <span class="built_in">document</span>.querySelectorAll(<span class="string">'li'</span>);</span><br><span class="line">forEach(myNodeList, <span class="function"><span class="keyword">function</span> (<span class="params">index, value</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(index, value); <span class="comment">// passes index + value back!</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h2 id="十七、内容向上滚动，有停顿"><a href="#十七、内容向上滚动，有停顿" class="headerlink" title="十七、内容向上滚动，有停顿"></a>十七、内容向上滚动，有停顿</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于内容向上滚动，有停顿</span></span><br><span class="line"><span class="comment"> * @param  &#123;object&#125; obj   元素</span></span><br><span class="line"><span class="comment"> * @param  &#123;number&#125; speed 滚动速度（滚动一个子元素高度的时间，单位毫秒）</span></span><br><span class="line"><span class="comment"> * @param  &#123;number&#125; delay 停顿时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startmarquee</span>(<span class="params">obj, speed, delay</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t;</span><br><span class="line">    <span class="keyword">var</span> p = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> o = obj;</span><br><span class="line">    <span class="keyword">var</span> h;</span><br><span class="line">    <span class="keyword">if</span> (!o || o.children.length &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    o.innerHTML += o.innerHTML;</span><br><span class="line">    o.scrollTop = <span class="number">0</span>;</span><br><span class="line">    h = o.children[<span class="number">0</span>].clientHeight;</span><br><span class="line"></span><br><span class="line">    o.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        p = <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    o.onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        p = <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        t = setInterval(scrolling, speed / h);</span><br><span class="line">        <span class="keyword">if</span> (!p) o.scrollTop += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">scrolling</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o.scrollTop % h != <span class="number">0</span>) &#123;</span><br><span class="line">            o.scrollTop += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (o.scrollTop &gt;= o.scrollHeight / <span class="number">2</span>) o.scrollTop = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            clearInterval(t);</span><br><span class="line">            setTimeout(start, delay);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    setTimeout(start, delay);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="十八、事件处理兼容写法"><a href="#十八、事件处理兼容写法" class="headerlink" title="十八、事件处理兼容写法"></a>十八、事件处理兼容写法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> eventUtil = &#123;</span><br><span class="line">    <span class="comment">// event兼容</span></span><br><span class="line">    getEvent: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> event ? event : <span class="built_in">window</span>.event;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// target兼容</span></span><br><span class="line">    getTarget: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> event.target ? event.target : event.srcelem;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加事件句柄</span></span><br><span class="line">    addHandler: <span class="function"><span class="keyword">function</span>(<span class="params">elem, type, listener</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (elem.addEventListener) &#123;</span><br><span class="line">            elem.addEventListener(type, listener, <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (elem.attachEvent) &#123;</span><br><span class="line">            elem.attachEvent(<span class="string">'on'</span> + type, listener);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 在这里由于.与'on'字符串不能链接，只能用 []</span></span><br><span class="line">            elem[<span class="string">'on'</span> + type] = listener;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移除事件句柄</span></span><br><span class="line">    removeHandler: <span class="function"><span class="keyword">function</span>(<span class="params">elem, type, listener</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (elem.removeEventListener) &#123;</span><br><span class="line">            elem.removeEventListener(type, listener, <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (elem.detachEvent) &#123;</span><br><span class="line">            elem.detachEvent(<span class="string">'on'</span> + type, listener);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            elem[<span class="string">'on'</span> + type] = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加事件代理</span></span><br><span class="line">    addAgent: <span class="function"><span class="keyword">function</span> (<span class="params">elem, type, agent, listener</span>) </span>&#123;</span><br><span class="line">        elem.addEventListener(type, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e.target.matches(agent)) &#123;</span><br><span class="line">                listener.call(e.target, e); <span class="comment">// this 指向 e.target</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取消默认行为</span></span><br><span class="line">    preventDefault: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.preventDefault) &#123;</span><br><span class="line">            event.preventDefault();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            event.returnValue = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 阻止事件冒泡</span></span><br><span class="line">    stopPropagation: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.stopPropagation) &#123;</span><br><span class="line">            event.stopPropagation();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            event.cancelBubble = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="十九、innerText兼容火狐"><a href="#十九、innerText兼容火狐" class="headerlink" title="十九、innerText兼容火狐"></a>十九、innerText兼容火狐</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跨浏览器获取innerText</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getInnerText</span>(<span class="params">element</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">typeof</span> element.textContent == <span class="string">'string'</span>) ? element.textContent : element.innerText;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//跨浏览器设置innerText</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setInnerText</span>(<span class="params">element,text</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> element.textContent == <span class="string">'string'</span>)&#123;</span><br><span class="line">        element.textContent = text;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        element.innerText = text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="二十、throttle-节流-和debounce-防抖"><a href="#二十、throttle-节流-和debounce-防抖" class="headerlink" title="二十、throttle(节流)和debounce(防抖)"></a>二十、throttle(节流)和debounce(防抖)</h2><h3 id="1、throttle-节流"><a href="#1、throttle-节流" class="headerlink" title="1、throttle(节流)"></a>1、throttle(节流)</h3><ul><li>应用场景(需要间隔一定时间触发回调来控制函数调用频率)<ul><li>mousemove</li><li>mousedown/keydown</li><li>mousemove</li><li>keyup</li><li>监听滚动事件判断是否到页面底部自动加载更多<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数节流（throttle）</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn, threshhold, scope</span>) </span>&#123;</span><br><span class="line">    threshhold || (threshhold = <span class="number">250</span>);</span><br><span class="line">    <span class="keyword">var</span> last, timer;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> context = scope || <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> now = +<span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">            args = <span class="built_in">arguments</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (last &amp;&amp; now - last + threshhold &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            clearTimeout(deferTimer);</span><br><span class="line">            timer = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                last = now;</span><br><span class="line">                fn.apply(context, args);</span><br><span class="line">            &#125;, threshhold);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            last = now;</span><br><span class="line">            fn.apply(context, args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">$(<span class="string">'body'</span>).on(<span class="string">'mousemove'</span>, throttle(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'tick'</span>);</span><br><span class="line">&#125;, <span class="number">1000</span>));</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="2、debounce-防抖"><a href="#2、debounce-防抖" class="headerlink" title="2、debounce(防抖)"></a>2、debounce(防抖)</h3><ul><li>应用场景(对于连续的事件响应我们只需要执行一次回调)<ul><li>每次 resize/scroll 触发统计事件</li><li>文本输入的验证（连续输入文字后发送 AJAX 请求进行验证，验证一次就好）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数去抖</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">fn, delay</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> context = <span class="keyword">this</span>, args = <span class="built_in">arguments</span>;</span><br><span class="line">        clearTimeout(timer);</span><br><span class="line">        timer = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            fn.apply(context, args);</span><br><span class="line">        &#125;, delay)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">$(<span class="string">'input.username'</span>).keypress(debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//do the Ajax request</span></span><br><span class="line">&#125;, <span class="number">250</span>))</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="二十一、移动端网络状态判断"><a href="#二十一、移动端网络状态判断" class="headerlink" title="二十一、移动端网络状态判断"></a>二十一、移动端网络状态判断</h2> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//网络状态判断</span></span><br><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params">window</span>)</span>&#123;</span><br><span class="line">    navigator.onLine ? online() : errorTip();</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"online"</span>, online, <span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"offline"</span>, offline, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重新连接</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">online</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//去掉提示</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//连接断开</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">offline</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//触发事件</span></span><br><span class="line">        <span class="comment">//显示提示</span></span><br><span class="line">        errorTip();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//错误提示</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">errorTip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"网络异常，请稍后再试"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;(<span class="built_in">window</span>));</span><br></pre></td></tr></table></figure><h2 id="二十二、判断浏览器是否支持-placeholder"><a href="#二十二、判断浏览器是否支持-placeholder" class="headerlink" title="二十二、判断浏览器是否支持 placeholder"></a>二十二、判断浏览器是否支持 placeholder</h2> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">placeholderSuport</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"placeholder"</span> <span class="keyword">in</span> <span class="built_in">document</span>.createElement(<span class="string">"input"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二十三、判断移动端设备-简单"><a href="#二十三、判断移动端设备-简单" class="headerlink" title="二十三、判断移动端设备(简单)"></a>二十三、判断移动端设备(简单)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断设备来源</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deviceType</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ua = navigator.userAgent;</span><br><span class="line">  <span class="keyword">var</span> agent = [<span class="string">'Android'</span>, <span class="string">'iPhone'</span>, <span class="string">'Symbian05'</span>, <span class="string">'Windows Phone'</span>, <span class="string">'iPad'</span>, <span class="string">'iPod'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; agent.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (ua.indexOf(agent[i] &gt; <span class="number">0</span>)) &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否是微信</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isWechat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> ua.match(<span class="regexp">/MicroMessage/i</span>) == <span class="string">'micromessager'</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是安卓还是iOS</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isAndroid</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="regexp">/iphone|ipad|ipod/</span>.test(ua) ? <span class="literal">false</span> : <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="二十四、解决不支持console-log报错"><a href="#二十四、解决不支持console-log报错" class="headerlink" title="二十四、解决不支持console.log报错"></a>二十四、解决不支持console.log报错</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">console</span> = <span class="built_in">console</span> || &#123;<span class="attr">log</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="keyword">return</span>;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="二十五、js类型判断"><a href="#二十五、js类型判断" class="headerlink" title="二十五、js类型判断"></a>二十五、js类型判断</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">var</span> type = <span class="built_in">Object</span>.prototype.toString.call(a)</span><br><span class="line"><span class="comment">// Number: [object Number]</span></span><br><span class="line"><span class="comment">// String: [object String]</span></span><br><span class="line"><span class="comment">// Array: [object Array]</span></span><br><span class="line"><span class="comment">// Object: [object Object]</span></span><br><span class="line"><span class="comment">// Boolean: [object Boolean]</span></span><br><span class="line"><span class="comment">// Null: [object Null]</span></span><br><span class="line"><span class="comment">// Undefined: [object Undefined]</span></span><br><span class="line"><span class="comment">// Function: [object Function]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、获取id和ClassName&quot;&gt;&lt;a href=&quot;#一、获取id和ClassName&quot; class=&quot;headerlink&quot; title=&quot;一、获取id和ClassName&quot;&gt;&lt;/a&gt;一、获取id和ClassName&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getId&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;id&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; id == &lt;span class=&quot;string&quot;&gt;&quot;object&quot;&lt;/span&gt;) ? id : &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取ClassName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tags = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;*&#39;&lt;/span&gt;) || &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.all;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; els = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; tags.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tags.className) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cs = tags.className.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; cs.length; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name == cs[j]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    els.push(tags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; els&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//解决IE8之类不支持getElementsByClassName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByClassName) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByClassName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;className, element&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; children = (element || &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;*&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; elements = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; children.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; child = children[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; classNames = child.className.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; classNames.length; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (classNames[j] == className) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    elements.push(child);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; elements;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="javascript" scheme="https://frontyang.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Hexo常用命令备忘</title>
    <link href="https://frontyang.github.io/2018/03/04/hexo/"/>
    <id>https://frontyang.github.io/2018/03/04/hexo/</id>
    <published>2018-03-04T06:46:49.117Z</published>
    <updated>2018-03-11T08:24:07.334Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p><code>npm install -g hexo-cli</code></p><h2 id="二、建站"><a href="#二、建站" class="headerlink" title="二、建站"></a>二、建站</h2><p><code>$ hexo init &lt;folder&gt;</code><br><code>$ cd &lt;folder&gt;</code><br><code>$ npm install</code></p><a id="more"></a><h2 id="三、生成静态页面"><a href="#三、生成静态页面" class="headerlink" title="三、生成静态页面"></a>三、生成静态页面</h2><p><code>hexo generate</code></p><h2 id="四、启动本地服务，进行文章预览调试"><a href="#四、启动本地服务，进行文章预览调试" class="headerlink" title="四、启动本地服务，进行文章预览调试"></a>四、启动本地服务，进行文章预览调试</h2><p><code>hexo server</code></p><h2 id="五、每次部署的步骤"><a href="#五、每次部署的步骤" class="headerlink" title="五、每次部署的步骤"></a>五、每次部署的步骤</h2><p><code>hexo clean</code><br><code>hexo generate</code><br><code>hexo deploy</code></p><h2 id="六、写作"><a href="#六、写作" class="headerlink" title="六、写作"></a>六、写作</h2><p><code>hexo new [layout] &lt;title&gt;</code></p><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">查看官网</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、安装&quot;&gt;&lt;a href=&quot;#一、安装&quot; class=&quot;headerlink&quot; title=&quot;一、安装&quot;&gt;&lt;/a&gt;一、安装&lt;/h2&gt;&lt;p&gt;&lt;code&gt;npm install -g hexo-cli&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;二、建站&quot;&gt;&lt;a href=&quot;#二、建站&quot; class=&quot;headerlink&quot; title=&quot;二、建站&quot;&gt;&lt;/a&gt;二、建站&lt;/h2&gt;&lt;p&gt;&lt;code&gt;$ hexo init &amp;lt;folder&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ cd &amp;lt;folder&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;$ npm install&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="hexo" scheme="https://frontyang.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Glue安装步骤及常用命令</title>
    <link href="https://frontyang.github.io/2018/03/04/glue/"/>
    <id>https://frontyang.github.io/2018/03/04/glue/</id>
    <published>2018-03-04T06:46:49.108Z</published>
    <updated>2018-03-11T08:24:03.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、windows安装步骤"><a href="#一、windows安装步骤" class="headerlink" title="一、windows安装步骤"></a>一、windows安装步骤</h2><ul><li>安装<a href="http://www.python.org/ftp/python/2.7.2/python-2.7.2.msi" target="_blank" rel="noopener">Python</a></li><li>安装<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/xn3pw759/PIL-1.1.7.win32-py2.7.exe" target="_blank" rel="noopener">PIL</a></li><li>安装 Python 的 <a href="http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11.win32-py2.7.exe" target="_blank" rel="noopener">easy_install</a></li><li>添加Python的脚本目录到path</li><li>运行如下命令 <strong>easy_install glue</strong><a id="more"></a></li></ul><h2 id="二、常用命令"><a href="#二、常用命令" class="headerlink" title="二、常用命令"></a>二、常用命令</h2><ul><li><p>1.快速: glue 源文件夹名称 输出文件夹名称<br><code>glue source output</code></p></li><li><p>2.排序：<br><code>glue source output --square|vertical|hortizontal|diagonal|vertical-right|horizontal-bottom</code></p></li><li><p>3.去掉图片多余的空白<br><code>glue source output --crop</code></p></li><li><p>4.在不同的文件夹下生成css和img<br><code>glue source --img=images/compiled --css=css/compiled</code></p></li><li><p>5.生成一个测试的html<br><code>glue source output --html</code></p></li><li><p>6.更改文件格式<br><code>glue source output --less</code></p></li><li><p>7.展开间距并且不计算为宽高<br><code>glue source output --10</code><br><code>glue source output --&#39;10 20&#39;</code><br><code>glue source output --&#39;10 20 30 40&#39;</code></p></li><li><p>8.排序<br><code>glue source output --maxside|width|height|area|filename</code><br><code>glue source output ---maxside|-width|-height|-area|-filename</code></p></li><li><p>9.在图像周围填充间距<br><code>glue source output --10</code><br><code>glue source output --10 20</code><br><code>glue source output --10 20 30 40</code></p></li><li><p>10.图片格式<br><code>glue source output --png8</code></p></li><li><p>11.后台监听<br><code>glue source output --watch</code></p></li></ul><p><a href="http://glue.readthedocs.io/en/latest/options.html" target="_blank" rel="noopener">参考</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、windows安装步骤&quot;&gt;&lt;a href=&quot;#一、windows安装步骤&quot; class=&quot;headerlink&quot; title=&quot;一、windows安装步骤&quot;&gt;&lt;/a&gt;一、windows安装步骤&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装&lt;a href=&quot;http://www.python.org/ftp/python/2.7.2/python-2.7.2.msi&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装&lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/xn3pw759/PIL-1.1.7.win32-py2.7.exe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装 Python 的 &lt;a href=&quot;http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11.win32-py2.7.exe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;easy_install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加Python的脚本目录到path&lt;/li&gt;
&lt;li&gt;运行如下命令 &lt;strong&gt;easy_install glue&lt;/strong&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="glue" scheme="https://frontyang.github.io/tags/glue/"/>
    
  </entry>
  
  <entry>
    <title>sublime text使用技巧</title>
    <link href="https://frontyang.github.io/2017/08/13/sublime/"/>
    <id>https://frontyang.github.io/2017/08/13/sublime/</id>
    <published>2017-08-13T07:36:50.000Z</published>
    <updated>2018-03-11T08:24:29.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><ul><li>新建文件：<code>ctrl + n</code></li><li>定义文件类型： <code>ctrl + shift + p</code>, 输入指定的文件类型</li><li>复制缩进：<code>ctrl + shift + v</code></li><li>复制一行：<code>ctrl + shift + d</code></li><li>向上插入新行：<code>ctrl + shift + enter</code><a id="more"></a></li><li>向下插入新行：<code>ctrl + enter</code></li><li>选择一行：<code>ctrl + l</code></li><li>显示/隐藏测导航：<code>ctrl + k + b</code></li><li>打开匹配文件：<code>ctrl + p</code> ,可以输入路径、文件名、#页面匹配、@选择器/函数、:行数</li><li>多行游标：<br>  1、<code>ctrl + h</code><br>  2、<code>ctrl + d</code>（ctrl + k + d: 跳过选中的内容）<br>  3、<code>ctrl + a, ctrl + l</code><br>  4、<code>shift + 鼠标右键拖动</code></li></ul><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="Emment"><a href="#Emment" class="headerlink" title="Emment"></a>Emment</h3><ul><li><p><code>! + tab</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>ul&gt;.item$*10 + tab</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item6"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item7"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item8"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item9"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item10"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>h2{text} + tab</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>text<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="advanceNewFile"><a href="#advanceNewFile" class="headerlink" title="advanceNewFile"></a>advanceNewFile</h3><ul><li>在当前文件下建立新文件</li><li>快捷键：<code>ctrl + shift + n</code></li></ul><!-- ### nettus fetch### sidebarenhancement### lint进行语法机风格校验 -->]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常用快捷键&quot;&gt;&lt;a href=&quot;#常用快捷键&quot; class=&quot;headerlink&quot; title=&quot;常用快捷键&quot;&gt;&lt;/a&gt;常用快捷键&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;新建文件：&lt;code&gt;ctrl + n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;定义文件类型： &lt;code&gt;ctrl + shift + p&lt;/code&gt;, 输入指定的文件类型&lt;/li&gt;
&lt;li&gt;复制缩进：&lt;code&gt;ctrl + shift + v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;复制一行：&lt;code&gt;ctrl + shift + d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;向上插入新行：&lt;code&gt;ctrl + shift + enter&lt;/code&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="sublime" scheme="https://frontyang.github.io/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>ES6学习笔记</title>
    <link href="https://frontyang.github.io/2017/08/09/es6/"/>
    <id>https://frontyang.github.io/2017/08/09/es6/</id>
    <published>2017-08-09T12:20:33.000Z</published>
    <updated>2018-03-11T08:23:54.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、var、let、const"><a href="#一、var、let、const" class="headerlink" title="一、var、let、const"></a>一、var、let、const</h2><h3 id="1、var-无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；"><a href="#1、var-无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；" class="headerlink" title="1、var: 无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；"></a>1、var: 无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；</h3><p>栗子：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i ++)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(i); <span class="comment">//10</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="2、let：用法类似于var，但不会变量提升，只在let命令所在的代码块内有效；"><a href="#2、let：用法类似于var，但不会变量提升，只在let命令所在的代码块内有效；" class="headerlink" title="2、let：用法类似于var，但不会变量提升，只在let命令所在的代码块内有效；"></a>2、let：用法类似于var，但不会变量提升，只在let命令所在的代码块内有效；</h3><p>栗子：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i ++)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(i); <span class="comment">//i is not defined</span></span><br></pre></td></tr></table></figure></p><h3 id="3、const-声明常量，一旦声明，不可更改（不是变量的值不能改动，而是变量指向的那个内存地址不得改动，见例3），而且常量必须初始化赋值，和let一样，只在声明所在的块级作用域内有效；"><a href="#3、const-声明常量，一旦声明，不可更改（不是变量的值不能改动，而是变量指向的那个内存地址不得改动，见例3），而且常量必须初始化赋值，和let一样，只在声明所在的块级作用域内有效；" class="headerlink" title="3、const: 声明常量，一旦声明，不可更改（不是变量的值不能改动，而是变量指向的那个内存地址不得改动，见例3），而且常量必须初始化赋值，和let一样，只在声明所在的块级作用域内有效；"></a>3、const: 声明常量，一旦声明，不可更改（不是变量的值不能改动，而是变量指向的那个内存地址不得改动，见例3），而且常量必须初始化赋值，和let一样，只在声明所在的块级作用域内有效；</h3><p>栗子1：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更改值的情况</span></span><br><span class="line"><span class="keyword">const</span> PI = <span class="number">3.1415</span>;</span><br><span class="line"><span class="built_in">console</span>.log(PI);</span><br><span class="line">PI = <span class="number">3</span>;</span><br><span class="line"><span class="comment">// Assignment to constant variable.</span></span><br></pre></td></tr></table></figure></p><p>栗子2：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 未赋值的情况</span></span><br><span class="line"><span class="keyword">const</span> PI</span><br><span class="line"><span class="comment">// Missing initializer in const declaration</span></span><br></pre></td></tr></table></figure></p><p>栗子3：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象声明</span></span><br><span class="line"><span class="keyword">const</span> foo = &#123;&#125;;</span><br><span class="line">foo.prop = <span class="number">123</span>;</span><br><span class="line"><span class="built_in">console</span>.log(foo.prop) <span class="comment">// 123</span></span><br><span class="line"></span><br><span class="line">foo = &#123;&#125; <span class="comment">//Assignment to constant variable.</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="二、解构赋值"><a href="#二、解构赋值" class="headerlink" title="二、解构赋值"></a>二、解构赋值</h2><h3 id="1、数组的解构赋值"><a href="#1、数组的解构赋值" class="headerlink" title="1、数组的解构赋值"></a>1、数组的解构赋值</h3><ul><li>从数组中提取值，按照对应位置，对变量赋值<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, b, c] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br></pre></td></tr></table></figure></li></ul><p>待续。。。</p><!-- ##### 对象的解构赋值##### 字符串的解构赋值##### 数值和布尔值的解构赋值##### 函数参数的解构赋值 -->]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、var、let、const&quot;&gt;&lt;a href=&quot;#一、var、let、const&quot; class=&quot;headerlink&quot; title=&quot;一、var、let、const&quot;&gt;&lt;/a&gt;一、var、let、const&lt;/h2&gt;&lt;h3 id=&quot;1、var-无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；&quot;&gt;&lt;a href=&quot;#1、var-无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；&quot; class=&quot;headerlink&quot; title=&quot;1、var: 无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；&quot;&gt;&lt;/a&gt;1、var: 无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；&lt;/h3&gt;&lt;p&gt;栗子：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; i ++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i); &lt;span class=&quot;comment&quot;&gt;//10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ES6" scheme="https://frontyang.github.io/tags/ES6/"/>
    
      <category term="javascript" scheme="https://frontyang.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>javascript知识点笔记</title>
    <link href="https://frontyang.github.io/2017/04/30/javascript-base/"/>
    <id>https://frontyang.github.io/2017/04/30/javascript-base/</id>
    <published>2017-04-30T07:00:51.000Z</published>
    <updated>2018-03-11T08:24:14.243Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、break、-continue-和-return-的用法"><a href="#一、break、-continue-和-return-的用法" class="headerlink" title="一、break、 continue 和 return 的用法"></a>一、break、 continue 和 return 的用法</h2><ul><li>break：会使运行的程序立刻退出包含在最内层的循环或者退出一个switch语句<br>栗子1：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">6</span>) <span class="keyword">break</span>;</span><br><span class="line">    <span class="built_in">document</span>.write(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果：12345</span></span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>continue：和break相似，不同的是，它不是退出一个循环，而是开始循环的一次新迭代，continue语句只能用在while语句、do/while语句、for语句、或者for/in语句的循环体内，在其它地方使用都会引起错误！</p></li><li><p>return： return语句就是用于指定函数返回的值。return语句只能出现在函数体内，出现在代码中的其他任何地方都会造成语法错误！</p></li></ul><hr><h2 id="二、instanceof："><a href="#二、instanceof：" class="headerlink" title="二、instanceof："></a>二、instanceof：</h2><ul><li><p>A instanceof B</p></li><li><p>A 是一个对象，B 是定义类的构造函数，如果 A 是 B 的实例，返回true，（也就是说，如果 A 继承自 B.prototype，返回true；这里的继承可以不是直接继承，如果 A 所继承的对象继承自另一个对象， B 继承自 B.prototype，返回的结果也为true）;</p></li></ul><hr><h2 id="constructor-NaN"><a href="#constructor-NaN" class="headerlink" title="constructor"></a>constructor</h2><ul><li>检测对象是否属于某个类</li><li>每个javascript函数都自动拥有一个 prototype 属性，这个属性的值是一个对象，这个对象包含唯一一个不可枚举属性 constructor，constructor 属性的值是一个函数对象。</li><li>新定义的 prototype 不含有 constructor 属性</li></ul><p>栗子1：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> p = F.prototype; <span class="comment">// 这是与F相关联的原型对象</span></span><br><span class="line"><span class="keyword">var</span> c = p.constructor; <span class="comment">// 这是与原型相关联的函数</span></span><br><span class="line">c === F; <span class="comment">// true, 对于任意函数F.prototype.constructor == F</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以看到构造函数的原型中存在预先定义好的constructor 属性，这意味着对象通常继承的constructor均指代它们的构造函数。</span></span><br></pre></td></tr></table></figure></p><p>栗子2：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> F();</span><br><span class="line">o.constructor === F; <span class="comment">// true,constructor属性指代这个类</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="三、hasOwnProperty"><a href="#三、hasOwnProperty" class="headerlink" title="三、hasOwnProperty"></a>三、hasOwnProperty</h2><ul><li>A.hasOwnProperty(“B”);</li><li>A 对象，B 属性名，如果 B 是 A 的自有属性 (B 不是 A<br>的继承属性)，则返回true。</li></ul><p>栗子1：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123; <span class="attr">x</span>: <span class="number">1</span> &#125;;</span><br><span class="line">o.hasOwnProperty(<span class="string">"x"</span>); <span class="comment">//true,o 有一个自有属性 x</span></span><br><span class="line">o.hasOwnProperty(<span class="string">"y"</span>); <span class="comment">// false, o 中不存在属性 y</span></span><br><span class="line">o.hasOwnProperty(<span class="string">"toString"</span>); <span class="comment">//false, toString 是继承属性</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="四、in"><a href="#四、in" class="headerlink" title="四、in"></a>四、in</h2><ul><li>“A” in B</li><li>A 是属性名（字符串），B 是对象，如果对象的自有属性或继承属性中包含这个属性则返回true</li><li>可以区分不存在的属性和存在但值为undefined的属性</li></ul><p>栗子1：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123; <span class="attr">x</span>: <span class="number">1</span> &#125;;</span><br><span class="line"><span class="string">"x"</span> <span class="keyword">in</span> o; <span class="comment">// true  "x"是 o 的属性</span></span><br><span class="line"><span class="string">"y"</span> <span class="keyword">in</span> o; <span class="comment">// false "y"不是 o 的属性</span></span><br><span class="line"><span class="string">"toString"</span> <span class="keyword">in</span> o; <span class="comment">// true o 继承 toString 属性</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="五、call-apply"><a href="#五、call-apply" class="headerlink" title="五、call() / apply()"></a>五、call() / apply()</h2><ul><li>改变this的指向； 当一个 对象 没有某个方法，但是其他的有，我们可以借助call或apply用其它对象的方法来操作。</li></ul><h3 id="1、call"><a href="#1、call" class="headerlink" title="1、call()"></a>1、call()</h3><ul><li>参数长度确定时使用</li><li>A.call(B, arg1, arg2…)</li></ul><h3 id="2、apply"><a href="#2、apply" class="headerlink" title="2、apply()"></a>2、apply()</h3><ul><li>参数长度不确定时使用</li><li>A.call(B, [arg1, arg2…])</li></ul><p>栗子1：（from MDN web docs）调用父构造函数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Product</span>(<span class="params">name, price</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.price = price;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//===============call==============</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Food</span>(<span class="params">name, price</span>)</span>&#123;</span><br><span class="line">    Product.call(<span class="keyword">this</span>, name, price);</span><br><span class="line">    <span class="keyword">this</span>.category = <span class="string">'food'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Food</span>(<span class="params">name, price</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.price = price;</span><br><span class="line">    <span class="keyword">this</span>.category = <span class="string">'food'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>栗子2：（from MDN web docs）调用匿名函数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//===============call==============</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> animals = [</span><br><span class="line">    &#123;<span class="attr">species</span>: <span class="string">'Lion'</span>, <span class="attr">name</span>:<span class="string">'King'</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">species</span>: <span class="string">'Whale'</span>, <span class="attr">name</span>:<span class="string">'Fail'</span>&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; animals.length; i++)&#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.print = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"#"</span> + i + <span class="string">" "</span> + <span class="keyword">this</span>.species + <span class="string">": "</span> + <span class="keyword">this</span>.name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.print();</span><br><span class="line">    &#125;).call(animals[i], i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>栗子3：（from MDN web docs）调用函数并且指定上下文的’this’</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reply = [<span class="keyword">this</span>.person, <span class="string">'Is An Awesome'</span>, <span class="keyword">this</span>.role].join(<span class="string">' '</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(reply);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i = &#123;</span><br><span class="line">    person: <span class="string">'Douglas Crockford'</span>, <span class="attr">role</span>: <span class="string">'Javascript Developer'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet.call(i); <span class="comment">//Douglas Crockford Is An Awesome Javascript Developer</span></span><br></pre></td></tr></table></figure><hr><h2 id="六、forEach"><a href="#六、forEach" class="headerlink" title="六、forEach()"></a>六、forEach()</h2><ul><li>遍历数组的函数,传递的函数做为forEach的第一个参数，forEach使用三个参数调用该函数：数组元素，元素的索引，数组本身；【注意：forEach无法在所有元素都传递给调用函数的函数之前终止遍历（即没有像for循环中使用的相应的break语句），如果需要终止循环，必须把forEach()放在一个try块中，并能抛出一个异常，如果forEach()调用函数抛出foreach.break异常，循环会提前终止】</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">v, i ,a</span>)</span>&#123;</span><br><span class="line"><span class="comment">// v:数组元素</span></span><br><span class="line"><span class="comment">// i：元素索引</span></span><br><span class="line"><span class="comment">// a：数组本身</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h2 id="七、cloneNode"><a href="#七、cloneNode" class="headerlink" title="七、cloneNode()"></a>七、cloneNode()</h2><ul><li>创建节点的拷贝，并返回该副本；克隆所有属性以及它们的值。</li><li>语法：var dupNode = node.cloneNode(deep);</li><li>dupNode：要克隆的节点</li><li>node：克隆的新节点 node</li><li>deep(可选)： true==&gt;克隆所有后代;false只克隆指定的节点</li></ul><p>栗子：（from W3School）<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">//html</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"myList1"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"myList2"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span>Water<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">// js</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> node=<span class="built_in">document</span>.getElementById(<span class="string">"myList2"</span>).lastChild.cloneNode(<span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"myList1"</span>).appendChild(node);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 克隆之前</span><br><span class="line">//myList1:</span><br><span class="line">Coffee</span><br><span class="line">Tea</span><br><span class="line"></span><br><span class="line">//myList2:</span><br><span class="line">Water</span><br><span class="line">Milk</span><br><span class="line"></span><br><span class="line">// 克隆之后</span><br><span class="line">//myList1:</span><br><span class="line">Coffee</span><br><span class="line">Tea</span><br><span class="line">Milk</span><br><span class="line"></span><br><span class="line">//myList2:</span><br><span class="line">Water</span><br><span class="line">Milk</span><br></pre></td></tr></table></figure></p><hr><h2 id="八、cssText"><a href="#八、cssText" class="headerlink" title="八、cssText"></a>八、cssText</h2><ul><li>批量修改样式，可以尽量避免页面reflow，提高页面性能</li><li>会把原有的cssText清掉, 所以最好使用 累加 的方法；</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element.style.cssText += <span class="string">"width:20px;height:20px;border:solid 1px red;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// cssText（假如不为空）在IE中最后一个分号会被删掉，可以在前面添加一个分号</span></span><br><span class="line">Element.style.cssText += ‘;width:<span class="number">100</span>px;height:<span class="number">100</span>px;top:<span class="number">100</span>px;left:<span class="number">100</span>px;’</span><br></pre></td></tr></table></figure><hr><h2 id="九、setTimeout-setInterval"><a href="#九、setTimeout-setInterval" class="headerlink" title="九、setTimeout() / setInterval()"></a>九、setTimeout() / setInterval()</h2><ul><li>用来注册在指定的时间之后单次或重复调用的函数</li><li>两者都会返回一个值，可以传递给clearTimeout()用于取消这个函数的执行</li><li>由于历史原因，第一个参数可以作为字符串传入，如果这么做，那这个字符串会在指定的超时时间或间隔之后进行求值（相当与执行eval()）</li><li>HTML5 规范还允许传入额外的参数（不支持IE）</li></ul><h3 id="1、setTimeout"><a href="#1、setTimeout" class="headerlink" title="1、setTimeout"></a>1、setTimeout</h3><ul><li>用来实现一个函数在指定的毫秒数之后运行</li></ul><h3 id="2、setInterval"><a href="#2、setInterval" class="headerlink" title="2、setInterval"></a>2、setInterval</h3><ul><li>与setTimeout一样，只是这个函数会在指定毫秒数的间隔里重复调用<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setInterval(undateClock, <span class="number">60000</span>);<span class="comment">// 每60s调用一个undateClock</span></span><br></pre></td></tr></table></figure></li></ul><p>栗子：(form JavaScript 权威指南)<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">invoke</span>(<span class="params">f, start, interval, end</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!start) start= <span class="number">0</span> ; <span class="comment">// 默认设置为0 ms</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">arguments</span>.length &lt;= <span class="number">2</span>)&#123; <span class="comment">// 单次调用模式</span></span><br><span class="line">        setTimeout(f, start); <span class="comment">// start ms 后 单次调用 f()</span></span><br><span class="line">    &#125;<span class="keyword">else</span> &#123; <span class="comment">// 多次调用模式</span></span><br><span class="line">        setTimeout(repeat, start); <span class="comment">// 在 start 调用repeat()</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">repeat</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">            <span class="keyword">var</span> h = setInterval(f, interval); <span class="comment">// 循环调用f()</span></span><br><span class="line">            <span class="keyword">if</span>(end) setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;clearInterval(h)&#125;, end);<span class="comment">// 在end ms后停止调用，前提是end已经定义</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="十、encodeURIComponent-decodeURIComponent"><a href="#十、encodeURIComponent-decodeURIComponent" class="headerlink" title="十、encodeURIComponent() / decodeURIComponent()"></a>十、encodeURIComponent() / decodeURIComponent()</h2><h3 id="1、encodeURIComponent"><a href="#1、encodeURIComponent" class="headerlink" title="1、encodeURIComponent"></a>1、encodeURIComponent</h3><ul><li>对统一资源标识符（URI）的组成部分进行编码的方法</li><li>转义除了字母、数字、(、)、.、!、~、*、’、-和_之外的所有字符<br>栗子：(from MDN web docs)<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fileName = <span class="string">'my file(2).txt'</span>;</span><br><span class="line"><span class="keyword">var</span> header = <span class="string">"Content-Disposition: attachment; filename*=UTF-8''"</span> </span><br><span class="line">             + encodeRFC5987ValueChars(fileName);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(header); </span><br><span class="line"><span class="comment">// 输出 "Content-Disposition: attachment; filename*=UTF-8''my%20file%282%29.txt"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encodeRFC5987ValueChars</span> (<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">encodeURIComponent</span>(str).</span><br><span class="line">        <span class="comment">// 注意，仅管 RFC3986 保留 "!"，但 RFC5987 并没有</span></span><br><span class="line">        <span class="comment">// 所以我们并不需要过滤它</span></span><br><span class="line">        replace(<span class="regexp">/['()]/g</span>, <span class="built_in">escape</span>). <span class="comment">// i.e., %27 %28 %29</span></span><br><span class="line">        replace(<span class="regexp">/\*/g</span>, <span class="string">'%2A'</span>).</span><br><span class="line">            <span class="comment">// 下面的并不是 RFC5987 中 URI 编码必须的</span></span><br><span class="line">            <span class="comment">// 所以对于 |`^ 这3个字符我们可以稍稍提高一点可读性</span></span><br><span class="line">            replace(<span class="regexp">/%(?:7C|60|5E)/g</span>, <span class="built_in">unescape</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2、decodeURIComponent"><a href="#2、decodeURIComponent" class="headerlink" title="2、decodeURIComponent"></a>2、decodeURIComponent</h3><ul><li>用于解码由 encodeURIComponent 方法或者其它类似方法编码的部分统一资源标识符（URI）</li><li>将已编码 URI 中所有能识别的转义序列转换成原字符<br>栗子：(from MDN web docs)<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">decodeURIComponent</span>(<span class="string">"JavaScript_%D1%88%D0%B5%D0%BB%D0%BB%D1%8B"</span>);</span><br><span class="line"><span class="comment">// "JavaScript_шеллы"</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="十一、getBoundingClientRect"><a href="#十一、getBoundingClientRect" class="headerlink" title="十一、getBoundingClientRect()"></a>十一、getBoundingClientRect()</h2><ul><li>返回元素在视口坐标中的位置，返回一个有left、right、top、bottom属性的对象。</li><li>left和top属性表示元素的左上角的X和Y坐标，right和bottom属性表示元素右下角的X和Y坐标</li><li>在很多浏览器中，还返回 width和height，在是在ie中未实现</li><li>不是实时的，在用户滚动或改变浏览器窗口大小时不会更新</li></ul><p>栗子：（from JavaScript权威指南）<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = e.getBoundingClientRect(); <span class="comment">//获得在视口坐标中的位置</span></span><br><span class="line"><span class="keyword">var</span> offsets = getScrollOffsets();</span><br><span class="line"><span class="keyword">var</span> x = box.left + offset.x;</span><br><span class="line"><span class="keyword">var</span> y = box.top + offset.y</span><br><span class="line"><span class="keyword">var</span> w = box.width || (box.right - box.left);</span><br><span class="line"><span class="keyword">var</span> h = box.height || (box.bottom - box.top);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 滚动条位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getScrollOffsets</span>(<span class="params">w</span>)</span>&#123;</span><br><span class="line">    w = w || <span class="built_in">window</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 除ie8- 版本，其他浏览器都能用</span></span><br><span class="line">    <span class="keyword">if</span>(w.pageXOffset != <span class="literal">null</span>) <span class="keyword">return</span> &#123;<span class="attr">x</span>: w.pageXOffset, <span class="attr">y</span>: w.pageYOffset&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对标准模式下的浏览器</span></span><br><span class="line">    <span class="keyword">var</span> d = w.document;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.compatMode == <span class="string">"CSS1Compat"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="attr">x</span>: d.documentElement.scrollLeft, y： d.documentElement.scrollTop&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对怪异模式下的浏览器</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">x</span>: d.body.scrollLeft, <span class="attr">y</span>: d.body.scrollTop&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="十二、createDocumentFragment"><a href="#十二、createDocumentFragment" class="headerlink" title="十二、createDocumentFragment"></a>十二、createDocumentFragment</h2><ul><li>作为其他节点的一个临时容器，是独立的，通常用在 创建文档片段，将元素附加到文档片段，然后将文档片段附加到DOM树<br>栗子：（from JavaScript权威指南）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 倒叙排列节点n的子节点</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reverse</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 创建一个DocumentFragment作为临时容器</span></span><br><span class="line">    <span class="keyword">var</span> f = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从后至前循环子节点，将每一个子节点移动到文档片段中</span></span><br><span class="line">    <span class="comment">// 注意：给f添加一个节点，改节点自动的会从n中删除</span></span><br><span class="line">    <span class="keyword">while</span>(n.lastChild) f.appendChild(n.lastChild);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 把f 的所有子节点一次性全部移回n中</span></span><br><span class="line">    n.appendChild(f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="十三、defaultView-getComputedStyle"><a href="#十三、defaultView-getComputedStyle" class="headerlink" title="十三、defaultView / getComputedStyle()"></a>十三、defaultView / getComputedStyle()</h2><h3 id="1、defaultView"><a href="#1、defaultView" class="headerlink" title="1、defaultView"></a>1、defaultView</h3><ul><li>在浏览器中，该属性返回当前 document 对象所关联的 window 对象，如果没有，会返回 null</li><li>只读</li><li>IE 9 以下版本不支持</li><li>使用方式： document.defaultView</li></ul><h3 id="2、getComputedStyle"><a href="#2、getComputedStyle" class="headerlink" title="2、getComputedStyle"></a>2、getComputedStyle</h3><ul><li>是一个可以获取当前元素所有最终使用的CSS属性值，返回的是一个CSS样式声明对象([object CSSStyleDeclaration])，只读</li><li>语法：window.getComputedStyle(element, [pseudoElt]);</li><li>element:用于获取计算样式的Element</li><li>pseudoElt: 可选，指定一个要匹配的伪元素的字符串。必须对普通元素省略（或null）。</li></ul><p>栗子1：（from MDN web docs）<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> elem1 = <span class="built_in">document</span>.getElementById(<span class="string">"elemId"</span>);</span><br><span class="line"><span class="keyword">let</span> style = <span class="built_in">window</span>.getComputedStyle(elem1, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 它等价于</span></span><br><span class="line"><span class="comment">// let style = document.defaultView.getComputedStyle(elem1, null);</span></span><br></pre></td></tr></table></figure></p><p>栗子2：(from MDN web docs）<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"> <span class="selector-id">#elem-container</span>&#123;</span></span><br><span class="line"><span class="undefined">   position: absolute;</span></span><br><span class="line"><span class="undefined">   left:     100px;</span></span><br><span class="line"><span class="undefined">   top:      200px;</span></span><br><span class="line"><span class="undefined">   height:   100px;</span></span><br><span class="line"><span class="undefined"> &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"elem-container"</span>&gt;</span>dummy<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"output"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">getTheStyle</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> elem = <span class="built_in">document</span>.getElementById(<span class="string">"elem-container"</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//getPropertyValue()返回一个DOMString含有一个指定的CSS属性的值</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> theCSSprop = <span class="built_in">window</span>.getComputedStyle(elem,<span class="literal">null</span>).getPropertyValue(<span class="string">"height"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"output"</span>).innerHTML = theCSSprop;</span></span><br><span class="line"><span class="undefined">   &#125;</span></span><br><span class="line"><span class="undefined">  getTheStyle();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>待续。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、break、-continue-和-return-的用法&quot;&gt;&lt;a href=&quot;#一、break、-continue-和-return-的用法&quot; class=&quot;headerlink&quot; title=&quot;一、break、 continue 和 return 的用法&quot;&gt;&lt;/a&gt;一、break、 continue 和 return 的用法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;break：会使运行的程序立刻退出包含在最内层的循环或者退出一个switch语句&lt;br&gt;栗子1：&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt;=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//输出结果：12345&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="javascript" scheme="https://frontyang.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>html基础知识</title>
    <link href="https://frontyang.github.io/2017/04/16/base-html/"/>
    <id>https://frontyang.github.io/2017/04/16/base-html/</id>
    <published>2017-04-16T04:38:04.000Z</published>
    <updated>2018-03-11T08:25:11.381Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Doctype"><a href="#一、Doctype" class="headerlink" title="一、Doctype"></a>一、Doctype</h2><p>-<code>&lt;!DOCTYPE&gt;</code> 声明必须位于 HTML5 文档中的第一行，也就是位于 <html> 标签之前。该标签告知浏览器文档所使用的 HTML 规范。<br>doctype 声明不属于 HTML 标签；它是一条指令，告诉浏览器编写页面所用的标记的版本。<br>在所有 HTML 文档中规定 doctype 是非常重要的，这样浏览器就能了解预期的文档类型。<br>HTML 4.01 中的 doctype 需要对 DTD 进行引用，因为 HTML 4.01 基于 SGML。而 HTML 5 不基于 SGML，因此不需要对 DTD 进行引用，但是需要 doctype 来规范浏览器的行为（让浏览器按照它们应该的方式来运行。）。</html></p><a id="more"></a><hr><h2 id="二、常用元素"><a href="#二、常用元素" class="headerlink" title="二、常用元素"></a>二、常用元素</h2><h3 id="1、块级元素"><a href="#1、块级元素" class="headerlink" title="1、块级元素"></a>1、块级元素</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">div - 常用块级容器，也是css layout的主要标签</span><br><span class="line">p - 段落</span><br><span class="line">ul - 无序列表</span><br><span class="line">dl - 定义列表</span><br><span class="line">ol - 排序表单</span><br><span class="line">table - 表格</span><br><span class="line">h1~h6 - 标题</span><br><span class="line">form - 交互表单</span><br><span class="line"></span><br><span class="line">pre - 格式化文本</span><br><span class="line">address - 地址</span><br><span class="line">blockquote - 块引用</span><br><span class="line">center - 居中对齐块</span><br><span class="line">dir - 目录列表</span><br><span class="line">fieldset - form控制组</span><br><span class="line">hr - 水平分割线</span><br><span class="line">menu - 菜单列表</span><br><span class="line">noframes - frames可选内容，（对于不支持frame的浏览器显示此区块内容）</span><br><span class="line">noscript - 可选脚本内容（对于不支持script的浏览器显示此内容）</span><br></pre></td></tr></table></figure><h3 id="2、行内元素"><a href="#2、行内元素" class="headerlink" title="2、行内元素"></a>2、行内元素</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">a - 锚点</span><br><span class="line">span - 常用内联容器，定义文本内区块</span><br><span class="line">em - 强调</span><br><span class="line">i - 斜体</span><br><span class="line">img - 图片</span><br><span class="line">label - 表格标签</span><br><span class="line">input - 输入框</span><br><span class="line">textarea - 多行文本输入框</span><br><span class="line">select - 项目选择</span><br><span class="line"></span><br><span class="line">abbr - 缩写</span><br><span class="line">acronym - 首字</span><br><span class="line">b - 粗体</span><br><span class="line">br - 换行</span><br><span class="line">strike - 中划线</span><br><span class="line">u - 下划线</span><br><span class="line">strong - 粗体强调</span><br><span class="line">sub - 下标</span><br><span class="line">sup - 上标</span><br><span class="line">code - 计算机代码(引用源码的时候需要)</span><br><span class="line">samp - 定义范例计算机代码</span><br></pre></td></tr></table></figure><h3 id="3、空元素"><a href="#3、空元素" class="headerlink" title="3、空元素"></a>3、空元素</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&gt; - 换行</span><br><span class="line">&lt;hr&gt; - 水平分割线</span><br><span class="line">&lt;img&gt; - 图片</span><br></pre></td></tr></table></figure><hr><h2 id="三、link和-import引入样式的区别"><a href="#三、link和-import引入样式的区别" class="headerlink" title="三、link和@import引入样式的区别"></a>三、link和@import引入样式的区别</h2><ul><li>1、link属于XHTML标签，除了可以加载css外，还可以定义RSS、rel连接属性等；@import 是css提供的一种方式，只能加CSS。</li><li>2、加载顺序不同:当一个页面被加载的时候，link引用的css会同时被加载，而@import引用的css会等到页面全部被下载完再被加载，所有有时候浏览@import加载css的页面时开始会没有样式（闪烁），网速慢的时候很明显。</li><li>3、兼容性:link无兼容问题，@import只有在ie5以上的才能识别。</li><li>4、使用dom控制样式时的差别：当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的。</li><li>5、@import可以在css中再次引入其他样式表。</li></ul><hr><h2 id="三、浏览器内核"><a href="#三、浏览器内核" class="headerlink" title="三、浏览器内核"></a>三、浏览器内核</h2><ul><li>负责对网页语法的解释并渲染网页</li></ul><p>常见的浏览器内核</p><ul><li>Trident：IE浏览器使用的内核</li><li>Gecko：Netscape6开始采用的内核，火来的Mozilla FireFox也采用了该内核</li><li>Presto:目前Opera采用的内核</li><li>Webkit：苹果公司自己的内核</li></ul><h2 id="四、html5"><a href="#四、html5" class="headerlink" title="四、html5"></a>四、html5</h2><h3 id="1、新元素"><a href="#1、新元素" class="headerlink" title="1、新元素"></a>1、新元素</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">内容元素：article、footer、header、nav、section</span><br><span class="line">表单控件：calender、date、time、email、url、search</span><br><span class="line">控件元素：webworker、wesockt、Geolocation</span><br></pre></td></tr></table></figure><h3 id="2、移除的元素"><a href="#2、移除的元素" class="headerlink" title="2、移除的元素"></a>2、移除的元素</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">显现层元素：basefont、big、center、font、s、strike、tt、u</span><br><span class="line">性能较差元素：frame、framest、noframes</span><br></pre></td></tr></table></figure><h3 id="3-兼容"><a href="#3-兼容" class="headerlink" title="3.兼容"></a>3.兼容</h3><ul><li>IE8/IE7/IE6支持通过document方法产生的标签，利用这一特性让这些浏览器支持HTML5新标签</li><li>使用html5shim框架</li></ul><h3 id="4、区分HTML和HTML5"><a href="#4、区分HTML和HTML5" class="headerlink" title="4、区分HTML和HTML5"></a>4、区分HTML和HTML5</h3><ul><li>DOCTYPE声明方式是区分HTML和HTML5标志的一个重要因素，还可以根据新增的结构、功能元素来加以区分</li></ul><hr><h2 id="五、理解HTML语义化"><a href="#五、理解HTML语义化" class="headerlink" title="五、理解HTML语义化"></a>五、理解HTML语义化</h2><ul><li>语义化有利于SEO，有利于搜索引擎爬虫更好的理解网页，从而获取更多的有效信息，提升网页的权重。</li><li>在没有css的时候能够清晰的看出网页的节骨，增强可读性。</li><li>便于团队开发和维护，语义化的HTML可以让开发者更容易的看明白，从而提高团队的效率和协调能力</li><li>支持多端设备的浏览器渲染。</li></ul><hr><h2 id="六、html5离线存储"><a href="#六、html5离线存储" class="headerlink" title="六、html5离线存储"></a>六、html5离线存储</h2><ul><li><p>将一些资源文件保存在本地，这样后续的页面重新加载将使用本地资源文件，在离线情况下可以继续访问web应用，同时通过一定的手法(更新相关文件或者使用相关API)，可以更新、删除离线存储等操作</p></li><li><p>基本流程：当第一次正确配置app cache后，当我们能再次访问该应用时，浏览器会首先检查manifest文件是否有变动。如果有变动就会把相应的变得跟新下来，同时改变浏览器里面的app cache，如果没有变动，就会直接把app cache的资源返回。</p></li></ul><h2 id="七、cookies-sessionStorage和localStorage"><a href="#七、cookies-sessionStorage和localStorage" class="headerlink" title="七、cookies,sessionStorage和localStorage"></a>七、cookies,sessionStorage和localStorage</h2><ul><li>共同点：都保存在浏览器端，且同源</li><li>区别：</li><li>cookie：<br>  （1）始终在同源的http请求中携带（及时不需要），即cookie在浏览器和服务器间来回传递 ；<br>  （2）有路径的概念，可以限制cookie只属于某个路径下；<br>  （3）数据不能超过4k，同时因为每次http请求都会携带cookie，所以cookie只适合保存很小的数据，如会话标识；<br>  （4）只在设置的cookie过期时间之前一直有效，即窗口或浏览器关闭；<br>  （5）在所有同源窗口中都是共享的。</li><li>sessionStorage:<br>  （1）只做本地保存，不会自动把数据发给服务器<br>  （2）数据可以达到5M或更多<br>  （3）仅当前浏览器窗口关闭前有效<br>  （4）在不同的浏览器窗口中不同享，即使是同一个页面</li><li>localStorage:<br>  （1）只做本地保存，不会自动把数据发给服务器<br>  （2）数据可以达到5M或更多<br>  （3）始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；<br>  （4）在所有同源窗口中都共享</li></ul><hr><h2 id="八、iframe的优缺点"><a href="#八、iframe的优缺点" class="headerlink" title="八、iframe的优缺点"></a>八、iframe的优缺点</h2><ul><li>优点：<br>  （1）iframe能够原封不动的把嵌入的网页展现出来。<br>  （2）如果有多个网页引用iframe，那么你只需要修改iframe的内容，就可以实现调用的每一个页面内容的更改，方便快捷。<br>  （3）网页如果为了统一风格，头部和版本都是一样的，就可以写成一个页面，用iframe来嵌套，可以增加代码的可重用。<br>  （4）如果遇到加载缓慢的第三方内容如图标和广告，这些问题可以由iframe来解决。</li><li>缺点：<br>  （1）会产生很多页面，不容易管理。<br>  （2）iframe框架结构有时会让人感到迷惑，如果框架个数多的话，可能会出现上下、左右滚动条，会分散访问者的注意力，用户体验度差。<br>  （3）代码复杂，无法被一些搜索引擎索引到，这一点很关键，现在的搜索引擎爬虫还不能很好的处理iframe中的内容，所以使用iframe会不利于搜索引擎优化。<br>  （4）很多的移动设备（PDA 手机）无法完全显示框架，设备兼容性差。<br>  （5）iframe框架页面会增加服务器的http请求，对于大型网站是不可取的。</li></ul><hr><h2 id="九、label的作用"><a href="#九、label的作用" class="headerlink" title="九、label的作用"></a>九、label的作用</h2><ul><li>label 标签为 input 元素定义标注（标记）。</li><li>label 元素不会向用户呈现任何特殊效果。不过，它为鼠标用户改进了可用性。如果您在 label 元素内点击文本，就会触发此控件。就是说，当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。</li><li>Label 中有两个属性是非常有用的,一个是FOR、另外一个就是ACCESSKEY了。<br>  FOR属性 :表示Label标签要绑定的HTML元素，你点击这个标签的时候，所绑定的元素将获取焦点。<br>  ACCESSKEY属性：功能：表示访问Label标签所绑定的元素的热键，当您按下热键，所绑定的元素将获取焦点。</li></ul><h2 id="十、html5的form如何关闭自动完成功能"><a href="#十、html5的form如何关闭自动完成功能" class="headerlink" title="十、html5的form如何关闭自动完成功能"></a>十、html5的form如何关闭自动完成功能</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">autocomplete</span>=<span class="string">"on/off"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>on 默认。规定启用自动完成功能。</li><li>off 规定禁用自动完成功能。</li></ul><hr><h2 id="十一、实现一个圆形可点击区域"><a href="#十一、实现一个圆形可点击区域" class="headerlink" title="十一、实现一个圆形可点击区域"></a>十一、实现一个圆形可点击区域</h2><ul><li>map+area 或者 svg;</li><li>border-radius;</li><li>纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等;</li></ul><hr><h2 id="二、实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致"><a href="#二、实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致" class="headerlink" title="二、实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致"></a>二、实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height:1px;overflow:hidden;background:black"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="十三、title和h1、b和strong、i和em的区别"><a href="#十三、title和h1、b和strong、i和em的区别" class="headerlink" title="十三、title和h1、b和strong、i和em的区别"></a>十三、title和h1、b和strong、i和em的区别</h2><ul><li>title标签是用来描述这个页面的主题的，是一个网页权重的最高点。但title标签并不出现在文章的正文中。</li><li>h1标签一般出现在文章的正文中，是展示给访问者的文章的标题。所以说这两个标签不仅不冲突的，而是合作的关系。</li><li>一篇文章既要有title又要有h1标签，既突出了文章的主题，又突出了标题和关键字，达到双重优化网站的效果。一般会把title和h1标签的内容写成一样，而且一般情况下一篇文章最好只用一个h1标签，过多的h1标签反而会让搜索引擎迷糊，认不清文章的主题。</li><li><p>b与strong的区别、i与em的区别</p></li><li><p>b标签和strong标签给我们的主观感受都是加粗，但对搜索引擎来说b标签和普通的文字并没有什么区别，而strong标签却是起强调作用的。也就是说如果你想让搜索引擎认为你的某句话很重要时那就用strong标签。如果只是想让用户看到加粗的效果，那就用b标签。</p></li><li>em标签也是针对搜索引擎来起作用的，i标签只是让用户看到展示的是斜体。</li></ul><p><a href="http://www.imooc.com/article/10377" target="_blank" rel="noopener">参考</a></p><p>未完待续。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Doctype&quot;&gt;&lt;a href=&quot;#一、Doctype&quot; class=&quot;headerlink&quot; title=&quot;一、Doctype&quot;&gt;&lt;/a&gt;一、Doctype&lt;/h2&gt;&lt;p&gt;-&lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; 声明必须位于 HTML5 文档中的第一行，也就是位于 &lt;html&gt; 标签之前。该标签告知浏览器文档所使用的 HTML 规范。&lt;br&gt;doctype 声明不属于 HTML 标签；它是一条指令，告诉浏览器编写页面所用的标记的版本。&lt;br&gt;在所有 HTML 文档中规定 doctype 是非常重要的，这样浏览器就能了解预期的文档类型。&lt;br&gt;HTML 4.01 中的 doctype 需要对 DTD 进行引用，因为 HTML 4.01 基于 SGML。而 HTML 5 不基于 SGML，因此不需要对 DTD 进行引用，但是需要 doctype 来规范浏览器的行为（让浏览器按照它们应该的方式来运行。）。&lt;/html&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="html" scheme="https://frontyang.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>vue学习</title>
    <link href="https://frontyang.github.io/2017/04/04/vuejs/"/>
    <id>https://frontyang.github.io/2017/04/04/vuejs/</id>
    <published>2017-04-04T04:52:57.000Z</published>
    <updated>2018-03-11T08:24:32.896Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Vue-js组件的重要选项"><a href="#一、Vue-js组件的重要选项" class="headerlink" title="一、Vue.js组件的重要选项"></a>一、Vue.js组件的重要选项</h3><h4 id="1、data-vue对象的数据"><a href="#1、data-vue对象的数据" class="headerlink" title="1、data: vue对象的数据"></a>1、data: vue对象的数据</h4><h4 id="2、methods-vue对象的方法"><a href="#2、methods-vue对象的方法" class="headerlink" title="2、methods: vue对象的方法"></a>2、methods: vue对象的方法</h4><h4 id="3、watch-设置了对象监听的方法"><a href="#3、watch-设置了对象监听的方法" class="headerlink" title="3、watch: 设置了对象监听的方法"></a>3、watch: 设置了对象监听的方法</h4><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; a &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="undefined">        a: 1,</span></span><br><span class="line"><span class="undefined">        b: []</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="javascript">        doSometh: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.a)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    watch: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">'a'</span>: <span class="function"><span class="keyword">function</span>(<span class="params">val, oldVal</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(val, oldVal)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="二、模板指令——html和vue对象的粘合剂"><a href="#二、模板指令——html和vue对象的粘合剂" class="headerlink" title="二、模板指令——html和vue对象的粘合剂"></a>二、模板指令——html和vue对象的粘合剂</h3><h4 id="1、数据渲染："><a href="#1、数据渲染：" class="headerlink" title="1、数据渲染："></a>1、数据渲染：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-text、v-html、 &#123;&#123; &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; a &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">"a"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">"a"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="undefined">    data: [</span></span><br><span class="line"><span class="undefined">        a: 1,</span></span><br><span class="line"><span class="undefined">        b: []</span></span><br><span class="line"><span class="undefined">    ]</span></span><br><span class="line"><span class="undefined">&#125;)</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br></pre></td></tr></table></figure><h4 id="2、控制模块隐藏：-v-if、v-show"><a href="#2、控制模块隐藏：-v-if、v-show" class="headerlink" title="2、控制模块隐藏： v-if、v-show"></a>2、控制模块隐藏： v-if、v-show</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="javascript">        isShow: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、渲染循环列表：-v-for"><a href="#3、渲染循环列表：-v-for" class="headerlink" title="3、渲染循环列表： v-for"></a>3、渲染循环列表： v-for</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">'item in items'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">'item.label'</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">...</span></span><br><span class="line"><span class="undefined">data: &#123;</span></span><br><span class="line"><span class="undefined">    items: [</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="javascript">            label: <span class="string">'apple'</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="javascript">            label: <span class="string">'banana'</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    ]</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">...</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4、事件绑定：-v-on"><a href="#4、事件绑定：-v-on" class="headerlink" title="4、事件绑定： v-on"></a>4、事件绑定： v-on</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"doThis"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"doThis"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">...</span></span><br><span class="line"><span class="undefined">nethods: &#123;</span></span><br><span class="line"><span class="javascript">    doThis: <span class="function"><span class="keyword">function</span>(<span class="params">someThing</span>)</span>&#123;&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">...</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5、属性绑定：-v-bind"><a href="#5、属性绑定：-v-bind" class="headerlink" title="5、属性绑定： v-bind"></a>5、属性绑定： v-bind</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span>  //字符串</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> ：<span class="attr">class</span>=<span class="string">"&#123; red: isRed &#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> //布尔值</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> ：<span class="attr">class</span>=<span class="string">"[classA, classB]"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> //</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> ：<span class="attr">class</span>=<span class="string">"[classA, &#123;classB: isB, classC： isC&#125;]"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>未完待续。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、Vue-js组件的重要选项&quot;&gt;&lt;a href=&quot;#一、Vue-js组件的重要选项&quot; class=&quot;headerlink&quot; title=&quot;一、Vue.js组件的重要选项&quot;&gt;&lt;/a&gt;一、Vue.js组件的重要选项&lt;/h3&gt;&lt;h4 id=&quot;1、data-vue对象的数据&quot;&gt;&lt;a href=&quot;#1、data-vue对象的数据&quot; class=&quot;headerlink&quot; title=&quot;1、data: vue对象的数据&quot;&gt;&lt;/a&gt;1、data: vue对象的数据&lt;/h4&gt;&lt;h4 id=&quot;2、methods-vue对象的方法&quot;&gt;&lt;a href=&quot;#2、methods-vue对象的方法&quot; class=&quot;headerlink&quot; title=&quot;2、methods: vue对象的方法&quot;&gt;&lt;/a&gt;2、methods: vue对象的方法&lt;/h4&gt;&lt;h4 id=&quot;3、watch-设置了对象监听的方法&quot;&gt;&lt;a href=&quot;#3、watch-设置了对象监听的方法&quot; class=&quot;headerlink&quot; title=&quot;3、watch: 设置了对象监听的方法&quot;&gt;&lt;/a&gt;3、watch: 设置了对象监听的方法&lt;/h4&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="vue" scheme="https://frontyang.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Sass学习笔记</title>
    <link href="https://frontyang.github.io/2017/03/27/sass/"/>
    <id>https://frontyang.github.io/2017/03/27/sass/</id>
    <published>2017-03-27T07:58:57.000Z</published>
    <updated>2018-03-11T08:24:22.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、常用命令"><a href="#一、常用命令" class="headerlink" title="一、常用命令"></a>一、常用命令</h2><ul><li><p>项目中常用：<br><code>sass --watch sass:css --style compact</code></p></li><li><p>格式转换<br><code>sass-convert style.sass style.scss</code></p></li><li><p>运行sass<br><code>sass input.css output.css</code></p><a id="more"></a></li><li><p>监视sass文件，每次更新时，自动编译成css<br><code>sass --watch input.scss: output.css</code></p></li><li><p>监视整个文件夹<br><code>sass --watch app/sass:public/stylesheets</code></p></li><li><p>更多命令行<br><code>sass --help</code></p></li><li><p>紧凑输出方式 campact<br><code>sass --watch test.scss:test.css --style compact</code></p></li><li><p>压缩输出方式 campact<br><code>sass --watch test.scss:test.css --style compressed</code></p></li></ul><hr><h2 id="二、基本用法"><a href="#二、基本用法" class="headerlink" title="二、基本用法"></a>二、基本用法</h2><h3 id="1、变量"><a href="#1、变量" class="headerlink" title="1、变量"></a>1、变量</h3><ul><li><p>使用$开头</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$blue : #1875e7;</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: $blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>如果变量需要镶嵌在字符串中，就必须需要写在#{}之中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$side: left;</span><br><span class="line">.rounded &#123;</span><br><span class="line">    border-#&#123;$side&#125;-radius: 5px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2、计算功能"><a href="#2、计算功能" class="headerlink" title="2、计算功能"></a>2、计算功能</h3><ul><li>例如<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$var: 500px;</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: (<span class="number">14px</span>/<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50px</span> + <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">right</span>:$var * <span class="number">10%</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3、嵌套"><a href="#3、嵌套" class="headerlink" title="3、嵌套"></a>3、嵌套</h3><ul><li><p>标签嵌套</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    h1&#123;</span><br><span class="line">        <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>属性嵌套</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:&#123;</span><br><span class="line">        color:red;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>伪类</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    &amp;:hover&#123;</span><br><span class="line">        <span class="selector-tag">color</span>:<span class="selector-id">#ffb3ff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4、注释"><a href="#4、注释" class="headerlink" title="4、注释"></a>4、注释</h3><ul><li>会保留到编译后的文件<br><code>/*  */</code></li><li>只保留在sass源文件中，编译后被省略<br><code>//</code></li><li>主要注释，即使是压缩模式编译，也会保留这行注释，通常用作声明版权信息<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/*!</span><br><span class="line">    重要注释</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="三、代码重用"><a href="#三、代码重用" class="headerlink" title="三、代码重用"></a>三、代码重用</h2><h3 id="4、继承"><a href="#4、继承" class="headerlink" title="4、继承"></a>4、继承</h3><ul><li>例如<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class1</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class2</span>&#123;</span><br><span class="line">    @extend .class1;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 120%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="5、Mixin"><a href="#5、Mixin" class="headerlink" title="5、Mixin"></a>5、Mixin</h3><ul><li><p>可以重用的代码块</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">mixin</span> left($value: <span class="number">10px</span>)&#123;</span><br><span class="line">    <span class="selector-tag">float</span>: <span class="selector-tag">left</span>;</span><br><span class="line">    margin-right: $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    @include left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>可以指定参数和缺省值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">mixin</span> rounded($vert, $horz, $radius: <span class="number">10px</span>)&#123;</span><br><span class="line">    border-#&#123;$vert&#125;-#&#123;$horz&#125;-radius: $radius;</span><br><span class="line">    -moz-border-#&#123;$vert&#125;-#&#123;$horz&#125;-radius: $radius;</span><br><span class="line">    -webkit-border-#&#123;$vert&#125;-#&#123;$horz&#125;-radius: $radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#navbar</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    @include rounded(top, left);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#footer</span>&#123;</span><br><span class="line">    @include rounded(top, left, 5px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6、颜色函数"><a href="#6、颜色函数" class="headerlink" title="6、颜色函数"></a>6、颜色函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lighten(#cc3, 10%) // #d6d65c</span><br><span class="line">darken(#cc3, 10%) // #a3a329</span><br><span class="line">grayscale(#cc3) // #808080</span><br><span class="line">complement(#cc3) // #33c</span><br></pre></td></tr></table></figure><h3 id="7、插入文件"><a href="#7、插入文件" class="headerlink" title="7、插入文件"></a>7、插入文件</h3><ul><li><p>@import命令，用来插入外部文件。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">import</span> <span class="string">"path/filename.scss"</span>;</span><br></pre></td></tr></table></figure></li><li><p>如果插入的是.css文件，则等同于css的import命令。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">import</span> <span class="string">"foo.css"</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="四、高级用法"><a href="#四、高级用法" class="headerlink" title="四、高级用法"></a>四、高级用法</h2><h3 id="1、条件语句"><a href="#1、条件语句" class="headerlink" title="1、条件语句"></a>1、条件语句</h3><ul><li><p>例1</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    @if 1 + 1 == 2 &#123; border:1px solid #eee; &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">if</span> <span class="number">5</span> &lt; <span class="number">3</span> &#123; <span class="selector-tag">border</span><span class="selector-pseudo">:2px</span> <span class="selector-tag">dotted</span> <span class="selector-id">#eee</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>; &#125;</span><br></pre></td></tr></table></figure></li><li><p>例2</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    @if lightness($color) &gt; 30% &#123;</span><br><span class="line">        <span class="selector-tag">background-color</span>: <span class="selector-id">#000</span>;</span><br><span class="line">    &#125; @<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line"><span class="selector-tag">p</span> &#123;  <span class="attribute">background-color</span>: <span class="number">#000</span>; &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2、循环语句"><a href="#2、循环语句" class="headerlink" title="2、循环语句"></a>2、循环语句</h3><ul><li><p>for循环</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">for</span> $i from <span class="number">1</span> to <span class="number">10</span>&#123;</span><br><span class="line">    .border-#&#123;$i&#125;&#123;</span><br><span class="line">        border: #&#123;$i&#125;px solid blue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line"><span class="selector-class">.border-1</span> &#123;<span class="attribute">border</span>: <span class="number">1px</span> solid blue; &#125;</span><br><span class="line"><span class="selector-class">.border-2</span> &#123;<span class="attribute">border</span>: <span class="number">2px</span> solid blue; &#125;</span><br><span class="line"><span class="selector-class">.border-3</span> &#123;<span class="attribute">border</span>: <span class="number">3px</span> solid blue; &#125;</span><br><span class="line"><span class="selector-class">.border-4</span> &#123;<span class="attribute">border</span>: <span class="number">4px</span> solid blue; &#125;</span><br><span class="line"><span class="selector-class">.border-5</span> &#123;<span class="attribute">border</span>: <span class="number">5px</span> solid blue; &#125;</span><br><span class="line"><span class="selector-class">.border-6</span> &#123;<span class="attribute">border</span>: <span class="number">6px</span> solid blue; &#125;</span><br><span class="line"><span class="selector-class">.border-7</span> &#123;<span class="attribute">border</span>: <span class="number">7px</span> solid blue; &#125;</span><br><span class="line"><span class="selector-class">.border-8</span> &#123;<span class="attribute">border</span>: <span class="number">8px</span> solid blue; &#125;</span><br><span class="line"><span class="selector-class">.border-9</span> &#123;<span class="attribute">border</span>: <span class="number">9px</span> solid blue; &#125;</span><br></pre></td></tr></table></figure></li><li><p>while循环</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$i: 6;</span><br><span class="line">@<span class="keyword">while</span> $i &gt; <span class="number">0</span>&#123;</span><br><span class="line">    .item-#&#123;$i&#125;&#123;</span><br><span class="line">        width: 2em * $i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $i: $i - 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line"><span class="selector-class">.item-6</span> &#123;<span class="attribute">width</span>: <span class="number">12em</span>; &#125;</span><br><span class="line"><span class="selector-class">.item-4</span> &#123;<span class="attribute">width</span>: <span class="number">8em</span>; &#125;</span><br><span class="line"><span class="selector-class">.item-2</span> &#123;<span class="attribute">width</span>: <span class="number">4em</span>; &#125;</span><br></pre></td></tr></table></figure></li><li><p>each</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">each</span> $member in a,b,c,d&#123;</span><br><span class="line">    .#&#123;$member&#125; &#123;</span><br><span class="line">        background-image:url("/image/#&#123;$member&#125;.jpg");</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line"><span class="selector-class">.a</span> &#123;<span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"/image/a.jpg"</span>); &#125;</span><br><span class="line"><span class="selector-class">.b</span> &#123;<span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"/image/b.jpg"</span>); &#125;</span><br><span class="line"><span class="selector-class">.c</span> &#123;<span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"/image/c.jpg"</span>); &#125;</span><br><span class="line"><span class="selector-class">.d</span> &#123;<span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"/image/d.jpg"</span>); &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3、自定义函数"><a href="#3、自定义函数" class="headerlink" title="3、自定义函数"></a>3、自定义函数</h3><ul><li>例如：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">function</span> double($n)&#123;</span><br><span class="line">    @<span class="keyword">return</span> $n * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="built_in">double</span>(5px);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line"><span class="selector-id">#sidebar</span> &#123; <span class="attribute">width</span>: <span class="number">10px</span>; &#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>ps: <a href="http://www.ruanyifeng.com/blog/2012/06/sass.html" target="_blank" rel="noopener">参考</a>,<a href="https://www.sass.hk/install/" target="_blank" rel="noopener">安装</a>,<a href="http://www.w3cplus.com/preprocessor/sass-debug-with-developer-tool.html" target="_blank" rel="noopener">调试</a>,<a href="http://www.w3cplus.com/preprocessor/sass-compile.html" target="_blank" rel="noopener">编译</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、常用命令&quot;&gt;&lt;a href=&quot;#一、常用命令&quot; class=&quot;headerlink&quot; title=&quot;一、常用命令&quot;&gt;&lt;/a&gt;一、常用命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;项目中常用：&lt;br&gt;&lt;code&gt;sass --watch sass:css --style compact&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式转换&lt;br&gt;&lt;code&gt;sass-convert style.sass style.scss&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行sass&lt;br&gt;&lt;code&gt;sass input.css output.css&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://frontyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="sass" scheme="https://frontyang.github.io/tags/sass/"/>
    
  </entry>
  
</feed>
