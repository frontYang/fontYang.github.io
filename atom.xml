<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YNode</title>
  
  <subtitle>记录学习的技能/遇到的问题</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-04-02T10:15:24.594Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>frongYang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo常用命令</title>
    <link href="http://yoursite.com/2018/03/04/hexo/"/>
    <id>http://yoursite.com/2018/03/04/hexo/</id>
    <published>2018-03-04T06:46:49.117Z</published>
    <updated>2017-04-02T10:15:24.594Z</updated>
    
    <content type="html"><![CDATA[<ul><li>安裝</li><li>建站</li><li>生成静态页面</li><li>本地预览</li><li>每次部署步骤</li></ul><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">官网</a></p><hr><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h2 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><h2 id="启动本地服务，进行文章预览调试"><a href="#启动本地服务，进行文章预览调试" class="headerlink" title="启动本地服务，进行文章预览调试"></a>启动本地服务，进行文章预览调试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="每次部署的步骤"><a href="#每次部署的步骤" class="headerlink" title="每次部署的步骤"></a>每次部署的步骤</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;安裝&lt;/li&gt;
&lt;li&gt;建站&lt;/li&gt;
&lt;li&gt;生成静态页面&lt;/li&gt;
&lt;li&gt;本地预览&lt;/li&gt;
&lt;li&gt;每次部署步骤&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="tool" scheme="http://yoursite.com/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>Glue安装步骤及常用命令</title>
    <link href="http://yoursite.com/2018/03/04/glue/"/>
    <id>http://yoursite.com/2018/03/04/glue/</id>
    <published>2018-03-04T06:46:49.108Z</published>
    <updated>2017-03-28T13:20:09.284Z</updated>
    
    <content type="html"><![CDATA[<ul><li>windows安装步骤</li><li>常用命令</li></ul><hr><a id="more"></a><h2 id="windows安装步骤"><a href="#windows安装步骤" class="headerlink" title="windows安装步骤"></a>windows安装步骤</h2><ul><li>安装<a href="http://www.python.org/ftp/python/2.7.2/python-2.7.2.msi" target="_blank" rel="noopener">Python</a></li><li>安装<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/xn3pw759/PIL-1.1.7.win32-py2.7.exe" target="_blank" rel="noopener">PIL</a></li><li>安装 Python 的 <a href="http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11.win32-py2.7.exe" target="_blank" rel="noopener">easy_install</a></li><li>添加Python的脚本目录到path</li><li>运行如下命令 <strong>easy_install glue</strong></li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li><p>1.快速: glue 源文件夹名称 输出文件夹名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glue source output</span><br></pre></td></tr></table></figure></li><li><p>2.排序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glue source output --square|vertical|hortizontal|diagonal|vertical-right|horizontal-bottom</span><br></pre></td></tr></table></figure></li><li><p>3.去掉图片多余的空白</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glue source output --crop</span><br></pre></td></tr></table></figure></li><li><p>4.在不同的文件夹下生成css和img</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glue source --img=images/compiled --css=css/compiled</span><br></pre></td></tr></table></figure></li><li><p>5.生成一个测试的html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glue source output --html</span><br></pre></td></tr></table></figure></li><li><p>6.更改文件格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glue source output --less</span><br></pre></td></tr></table></figure></li><li><p>7.展开间距并且不计算为宽高</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">glue source output --10</span><br><span class="line">glue source output --&apos;10 20&apos;</span><br><span class="line">glue source output --&apos;10 20 30 40&apos;</span><br></pre></td></tr></table></figure></li><li><p>8.排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">glue source output --maxside|width|height|area|filename</span><br><span class="line">glue source output ---maxside|-width|-height|-area|-filename</span><br></pre></td></tr></table></figure></li><li><p>9.在图像周围填充间距</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">glue source output --10</span><br><span class="line">glue source output --10 20</span><br><span class="line">glue source output --10 20 30 40</span><br></pre></td></tr></table></figure></li><li><p>10.图片格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glue source output --png8</span><br></pre></td></tr></table></figure></li><li><p>11.后台监听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glue source output --watch</span><br></pre></td></tr></table></figure></li></ul><p><a href="http://glue.readthedocs.io/en/latest/options.html" target="_blank" rel="noopener">参考</a></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;windows安装步骤&lt;/li&gt;
&lt;li&gt;常用命令&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="tool" scheme="http://yoursite.com/tags/tool/"/>
    
      <category term="glue" scheme="http://yoursite.com/tags/glue/"/>
    
  </entry>
  
  <entry>
    <title>sublime text使用技巧</title>
    <link href="http://yoursite.com/2017/08/13/sublime/"/>
    <id>http://yoursite.com/2017/08/13/sublime/</id>
    <published>2017-08-13T07:36:50.000Z</published>
    <updated>2017-09-16T04:14:51.036Z</updated>
    
    <content type="html"><![CDATA[<ul><li>常用快捷键</li><li>插件</li></ul><a id="more"></a><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><ul><li>新建文件：ctrl + n</li><li>定义文件类型： ctrl + shift + p, 输入指定的文件类型</li><li>复制缩进：ctrl + shift + v</li><li>复制一行：ctrl + shift + d</li><li>向上插入新行：ctrl + shift + enter</li><li>向下插入新行：ctrl + enter</li><li>选择一行：ctrl + l</li><li>显示/隐藏测导航：ctrl + k + b</li><li>打开匹配文件：ctrl + p ,可以输入路径、文件名、#页面匹配、@选择器/函数、:行数</li><li>多行游标：<br>  1、ctrl + h<br>  2、ctrl + d（ctrl + k + d: 跳过选中的内容）<br>  3、ctrl + a, ctrl + l<br>  4、shift + 鼠标右键拖动</li></ul><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="Emment"><a href="#Emment" class="headerlink" title="Emment"></a>Emment</h3><ul><li><p>! + tab</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>ul&gt;.item$*10 + tab</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li class=&quot;item1&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item2&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item4&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item5&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item6&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item7&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item8&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item9&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item10&quot;&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure></li><li><p>h2{text} + tab</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;text&lt;/h2&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="advanceNewFile"><a href="#advanceNewFile" class="headerlink" title="advanceNewFile"></a>advanceNewFile</h3><ul><li>在当前文件下建立新文件</li><li>快捷键：ctrl + shift + n</li></ul><!-- ### nettus fetch### sidebarenhancement### lint进行语法机风格校验 -->]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;常用快捷键&lt;/li&gt;
&lt;li&gt;插件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="tool" scheme="http://yoursite.com/tags/tool/"/>
    
      <category term="sublime" scheme="http://yoursite.com/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>webpack学习笔记</title>
    <link href="http://yoursite.com/2017/08/09/webpack/"/>
    <id>http://yoursite.com/2017/08/09/webpack/</id>
    <published>2017-08-09T15:14:52.000Z</published>
    <updated>2018-03-04T06:51:17.682Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tool" scheme="http://yoursite.com/tags/tool/"/>
    
      <category term="webpack" scheme="http://yoursite.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>ES6学习笔记</title>
    <link href="http://yoursite.com/2017/08/09/es6/"/>
    <id>http://yoursite.com/2017/08/09/es6/</id>
    <published>2017-08-09T12:20:33.000Z</published>
    <updated>2017-08-19T06:28:42.165Z</updated>
    
    <content type="html"><![CDATA[<ul><li>var、let、const</li><li>解构赋值</li></ul><a id="more"></a><h3 id="var、let、const"><a href="#var、let、const" class="headerlink" title="var、let、const"></a>var、let、const</h3><h4 id="var-无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；"><a href="#var-无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；" class="headerlink" title="var: 无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；"></a>var: 无论在代码的那个地方声明，都会提升到该函数的开头（变量提升）；</h4><p>栗子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for(var i = 0; i &lt; 10; i ++)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(i); //10</span><br></pre></td></tr></table></figure></p><h4 id="let：用法类似于var，但不会变量提升，只在let命令所在的代码块内有效；"><a href="#let：用法类似于var，但不会变量提升，只在let命令所在的代码块内有效；" class="headerlink" title="let：用法类似于var，但不会变量提升，只在let命令所在的代码块内有效；"></a>let：用法类似于var，但不会变量提升，只在let命令所在的代码块内有效；</h4><p>栗子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for(let i = 0; i &lt; 10; i ++)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(i); //i is not defined</span><br></pre></td></tr></table></figure></p><h4 id="const-声明常量，一旦声明，不可更改（不是变量的值不能改动，而是变量指向的那个内存地址不得改动，见例3），而且常量必须初始化赋值，和let一样，只在声明所在的块级作用域内有效；"><a href="#const-声明常量，一旦声明，不可更改（不是变量的值不能改动，而是变量指向的那个内存地址不得改动，见例3），而且常量必须初始化赋值，和let一样，只在声明所在的块级作用域内有效；" class="headerlink" title="const: 声明常量，一旦声明，不可更改（不是变量的值不能改动，而是变量指向的那个内存地址不得改动，见例3），而且常量必须初始化赋值，和let一样，只在声明所在的块级作用域内有效；"></a>const: 声明常量，一旦声明，不可更改（不是变量的值不能改动，而是变量指向的那个内存地址不得改动，见例3），而且常量必须初始化赋值，和let一样，只在声明所在的块级作用域内有效；</h4><p>栗子1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 更改值的情况</span><br><span class="line">const PI = 3.1415;</span><br><span class="line">console.log(PI);</span><br><span class="line">PI = 3;</span><br><span class="line">// Assignment to constant variable.</span><br></pre></td></tr></table></figure></p><p>栗子2：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 未赋值的情况</span><br><span class="line">const PI</span><br><span class="line">// Missing initializer in const declaration</span><br></pre></td></tr></table></figure></p><p>栗子3：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 对象声明</span><br><span class="line">const foo = &#123;&#125;;</span><br><span class="line">foo.prop = 123;</span><br><span class="line">console.log(foo.prop) // 123</span><br><span class="line"></span><br><span class="line">foo = &#123;&#125; //Assignment to constant variable.</span><br></pre></td></tr></table></figure></p><hr><h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h3><h5 id="数组的解构赋值"><a href="#数组的解构赋值" class="headerlink" title="数组的解构赋值"></a>数组的解构赋值</h5><ul><li>从数组中提取值，按照对应位置，对变量赋值<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let [a, b, c] = [1, 2, 3];</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="对象的解构赋值"><a href="#对象的解构赋值" class="headerlink" title="对象的解构赋值"></a>对象的解构赋值</h5><h5 id="字符串的解构赋值"><a href="#字符串的解构赋值" class="headerlink" title="字符串的解构赋值"></a>字符串的解构赋值</h5><h5 id="数值和布尔值的解构赋值"><a href="#数值和布尔值的解构赋值" class="headerlink" title="数值和布尔值的解构赋值"></a>数值和布尔值的解构赋值</h5><h5 id="函数参数的解构赋值"><a href="#函数参数的解构赋值" class="headerlink" title="函数参数的解构赋值"></a>函数参数的解构赋值</h5>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;var、let、const&lt;/li&gt;
&lt;li&gt;解构赋值&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>javascript日常笔记</title>
    <link href="http://yoursite.com/2017/04/30/javascript-base/"/>
    <id>http://yoursite.com/2017/04/30/javascript-base/</id>
    <published>2017-04-30T07:00:51.000Z</published>
    <updated>2017-08-05T09:35:55.460Z</updated>
    
    <content type="html"><![CDATA[<ul><li>break continue 和 return 的用法</li><li>instanceof</li><li>constructor</li><li>hasOwnProperty</li><li>in</li><li>call() / apply()</li><li>forEach()</li><li>cloneNode()</li><li>cssText</li><li>setTimeout() / setInterval()</li><li>encodeURIComponent() / decodeURIComponent()</li><li>getBoundingClientRect()</li><li>createDocumentFragment</li><li>defaultView / getComputedStyle()</li></ul><a id="more"></a><h2 id="break、-continue-和-return-的用法"><a href="#break、-continue-和-return-的用法" class="headerlink" title="break、 continue 和 return 的用法"></a>break、 continue 和 return 的用法</h2><ul><li><p>break：会使运行的程序立刻退出包含在最内层的循环或者退出一个switch语句<br>栗子1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for(var i=1;i&lt;=10;i++)&#123;</span><br><span class="line">    if(i==6) break;</span><br><span class="line">    document.write(i);</span><br><span class="line">&#125;</span><br><span class="line">//输出结果：12345</span><br></pre></td></tr></table></figure></li><li><p>continue：和break相似，不同的是，它不是退出一个循环，而是开始循环的一次新迭代，continue语句只能用在while语句、do/while语句、for语句、或者for/in语句的循环体内，在其它地方使用都会引起错误！</p></li><li><p>return： return语句就是用于指定函数返回的值。return语句只能出现在函数体内，出现在代码中的其他任何地方都会造成语法错误！</p></li></ul><hr><h2 id="instanceof："><a href="#instanceof：" class="headerlink" title="instanceof："></a>instanceof：</h2><ul><li><p>A instanceof B</p></li><li><p>A 是一个对象，B 是定义类的构造函数，如果 A 是 B 的实例，返回true，（也就是说，如果 A 继承自 B.prototype，返回true；这里的继承可以不是直接继承，如果 A 所继承的对象继承自另一个对象， B 继承自 B.prototype，返回的结果也为true）;</p></li></ul><hr><h2 id="constructor-NaN"><a href="#constructor-NaN" class="headerlink" title="constructor"></a>constructor</h2><ul><li>检测对象是否属于某个类</li><li>每个javascript函数都自动拥有一个 prototype 属性，这个属性的值是一个对象，这个对象包含唯一一个不可枚举属性 constructor，constructor 属性的值是一个函数对象。</li><li>新定义的 prototype 不含有 constructor 属性</li></ul><p>栗子1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var F = function()&#123;&#125;</span><br><span class="line">var p = F.prototype; // 这是与F相关联的原型对象</span><br><span class="line">var c = p.constructor; // 这是与原型相关联的函数</span><br><span class="line">c === F; // true, 对于任意函数F.prototype.constructor == F</span><br><span class="line"></span><br><span class="line">// 可以看到构造函数的原型中存在预先定义好的constructor 属性，这意味着对象通常继承的constructor均指代它们的构造函数。</span><br></pre></td></tr></table></figure></p><p>栗子2：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var o = new F();</span><br><span class="line">o.constructor === F; // true,constructor属性指代这个类</span><br></pre></td></tr></table></figure></p><hr><h2 id="hasOwnProperty-NaN"><a href="#hasOwnProperty-NaN" class="headerlink" title="hasOwnProperty"></a>hasOwnProperty</h2><ul><li>A.hasOwnProperty(“B”);</li><li>A 对象，B 属性名，如果 B 是 A 的自有属性 (B 不是 A<br>的继承属性)，则返回true。</li></ul><p>栗子1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var o = &#123; x: 1 &#125;;</span><br><span class="line">o.hasOwnProperty(&quot;x&quot;); //true,o 有一个自有属性 x</span><br><span class="line">o.hasOwnProperty(&quot;y&quot;); // false, o 中不存在属性 y</span><br><span class="line">o.hasOwnProperty(&quot;toString&quot;); //false, toString 是继承属性</span><br></pre></td></tr></table></figure></p><hr><h2 id="in"><a href="#in" class="headerlink" title="in"></a>in</h2><ul><li>“A” in B</li><li>A 是属性名（字符串），B 是对象，如果对象的自有属性或继承属性中包含这个属性则返回true</li><li>可以区分不存在的属性和存在但值为undefined的属性</li></ul><p>栗子1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var o = &#123; x: 1 &#125;;</span><br><span class="line">&quot;x&quot; in o; // true  &quot;x&quot;是 o 的属性</span><br><span class="line">&quot;y&quot; in o; // false &quot;y&quot;不是 o 的属性</span><br><span class="line">&quot;toString&quot; in o; // true o 继承 toString 属性</span><br></pre></td></tr></table></figure></p><hr><h2 id="call-apply"><a href="#call-apply" class="headerlink" title="call() / apply()"></a>call() / apply()</h2><ul><li>改变this的指向； 当一个 对象 没有某个方法，但是其他的有，我们可以借助call或apply用其它对象的方法来操作。</li></ul><h3 id="call"><a href="#call" class="headerlink" title="call()"></a>call()</h3><ul><li>参数长度确定时使用</li><li>A.call(B, arg1, arg2…)</li></ul><h3 id="apply"><a href="#apply" class="headerlink" title="apply()"></a>apply()</h3><ul><li>参数长度不确定时使用</li><li>A.call(B, [arg1, arg2…])</li></ul><p>栗子1：（from MDN web docs）调用父构造函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function Product(name, price)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.price = price;</span><br><span class="line">&#125;</span><br><span class="line">//===============call==============</span><br><span class="line"></span><br><span class="line">function Food(name, price)&#123;</span><br><span class="line">    Product.call(this, name, price);</span><br><span class="line">    this.category = &apos;food&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line"></span><br><span class="line">function Food(name, price)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.price = price;</span><br><span class="line">    this.category = &apos;food&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>栗子2：（from MDN web docs）调用匿名函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//===============call==============</span><br><span class="line"></span><br><span class="line">var animals = [</span><br><span class="line">    &#123;species: &apos;Lion&apos;, name:&apos;King&apos;&#125;,</span><br><span class="line">    &#123;species: &apos;Whale&apos;, name:&apos;Fail&apos;&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">for(var i = 0; i &lt; animals.length; i++)&#123;</span><br><span class="line">    (function(i)&#123;</span><br><span class="line">        this.print = function()&#123;</span><br><span class="line">            console.log(&quot;#&quot; + i + &quot; &quot; + this.species + &quot;: &quot; + this.name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        this.print();</span><br><span class="line">    &#125;).call(animals[i], i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>栗子3：（from MDN web docs）调用函数并且指定上下文的’this’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function greet()&#123;</span><br><span class="line">    var reply = [this.person, &apos;Is An Awesome&apos;, this.role].join(&apos; &apos;);</span><br><span class="line">    console.log(reply);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var i = &#123;</span><br><span class="line">    person: &apos;Douglas Crockford&apos;, role: &apos;Javascript Developer&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet.call(i); //Douglas Crockford Is An Awesome Javascript Developer</span><br></pre></td></tr></table></figure><hr><h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach()"></a>forEach()</h2><ul><li>遍历数组的函数,传递的函数做为forEach的第一个参数，forEach使用三个参数调用该函数：数组元素，元素的索引，数组本身；【注意：forEach无法在所有元素都传递给调用函数的函数之前终止遍历（即没有像for循环中使用的相应的break语句），如果需要终止循环，必须把forEach()放在一个try块中，并能抛出一个异常，如果forEach()调用函数抛出foreach.break异常，循环会提前终止】</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data.forEach(function(v, i ,a)&#123;</span><br><span class="line"></span><br><span class="line">&#125;）</span><br><span class="line"></span><br><span class="line">// v:数组元素</span><br><span class="line">// i：元素索引</span><br><span class="line">// a：数组本身</span><br></pre></td></tr></table></figure><hr><h2 id="cloneNode"><a href="#cloneNode" class="headerlink" title="cloneNode()"></a>cloneNode()</h2><ul><li>创建节点的拷贝，并返回该副本；克隆所有属性以及它们的值。</li><li>语法：var dupNode = node.cloneNode(deep);</li><li>dupNode：要克隆的节点</li><li>node：克隆的新节点 node</li><li>deep(可选)： true==&gt;克隆所有后代;false只克隆指定的节点</li></ul><p>栗子：（from W3School）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">//html</span><br><span class="line">&lt;ul id=&quot;myList1&quot;&gt;&lt;li&gt;Coffee&lt;/li&gt;&lt;li&gt;Tea&lt;/li&gt;&lt;/ul&gt;</span><br><span class="line">&lt;ul id=&quot;myList2&quot;&gt;&lt;li&gt;Water&lt;/li&gt;&lt;li&gt;Milk&lt;/li&gt;&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// js</span><br><span class="line">var node=document.getElementById(&quot;myList2&quot;).lastChild.cloneNode(true);</span><br><span class="line">document.getElementById(&quot;myList1&quot;).appendChild(node);</span><br><span class="line"></span><br><span class="line">// 克隆之前</span><br><span class="line">//myList1:</span><br><span class="line">Coffee</span><br><span class="line">Tea</span><br><span class="line"></span><br><span class="line">//myList2:</span><br><span class="line">Water</span><br><span class="line">Milk</span><br><span class="line"></span><br><span class="line">// 克隆之后</span><br><span class="line">//myList1:</span><br><span class="line">Coffee</span><br><span class="line">Tea</span><br><span class="line">Milk</span><br><span class="line"></span><br><span class="line">//myList2:</span><br><span class="line">Water</span><br><span class="line">Milk</span><br></pre></td></tr></table></figure></p><hr><h2 id="cssText"><a href="#cssText" class="headerlink" title="cssText"></a>cssText</h2><ul><li>批量修改样式，可以尽量避免页面reflow，提高页面性能</li><li>会把原有的cssText清掉, 所以最好使用 累加 的方法；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element.style.cssText += &quot;width:20px;height:20px;border:solid 1px red;&quot;;</span><br><span class="line"></span><br><span class="line">// cssText（假如不为空）在IE中最后一个分号会被删掉，可以在前面添加一个分号</span><br><span class="line">Element.style.cssText += ‘;width:100px;height:100px;top:100px;left:100px;’</span><br></pre></td></tr></table></figure><hr><h2 id="setTimeout-setInterval"><a href="#setTimeout-setInterval" class="headerlink" title="setTimeout() / setInterval()"></a>setTimeout() / setInterval()</h2><ul><li>用来注册在指定的时间之后单次或重复调用的函数</li><li>两者都会返回一个值，可以传递给clearTimeout()用于取消这个函数的执行</li><li>由于历史原因，第一个参数可以作为字符串传入，如果这么做，那这个字符串会在指定的超时时间或间隔之后进行求值（相当与执行eval()）</li><li>HTML5 规范还允许传入额外的参数（不支持IE）</li></ul><h3 id="setTimeout"><a href="#setTimeout" class="headerlink" title="setTimeout"></a>setTimeout</h3><ul><li>用来实现一个函数在指定的毫秒数之后运行</li></ul><h3 id="setInterval"><a href="#setInterval" class="headerlink" title="setInterval"></a>setInterval</h3><ul><li>与setTimeout一样，只是这个函数会在指定毫秒数的间隔里重复调用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setInterval(undateClock, 60000);// 每60s调用一个undateClock</span><br></pre></td></tr></table></figure></li></ul><p>栗子：(form JavaScript 权威指南)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function invoke(f, start, interval, end)&#123;</span><br><span class="line">    if(!start) start= 0 ; // 默认设置为0 ms</span><br><span class="line">    if(arguments.length &lt;= 2)&#123; // 单次调用模式</span><br><span class="line">        setTimeout(f, start); // start ms 后 单次调用 f()</span><br><span class="line">    &#125;else &#123; // 多次调用模式</span><br><span class="line">        setTimeout(repeat, start); // 在 start 调用repeat()</span><br><span class="line">        function repeat()&#123; </span><br><span class="line">            var h = setInterval(f, interval); // 循环调用f()</span><br><span class="line">            if(end) setTimeout(function()&#123;clearInterval(h)&#125;, end);// 在end ms后停止调用，前提是end已经定义</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="encodeURIComponent-decodeURIComponent"><a href="#encodeURIComponent-decodeURIComponent" class="headerlink" title="encodeURIComponent() / decodeURIComponent()"></a>encodeURIComponent() / decodeURIComponent()</h2><h3 id="encodeURIComponent"><a href="#encodeURIComponent" class="headerlink" title="encodeURIComponent"></a>encodeURIComponent</h3><ul><li>对统一资源标识符（URI）的组成部分进行编码的方法</li><li>转义除了字母、数字、(、)、.、!、~、*、’、-和_之外的所有字符<br>栗子：(from MDN web docs)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var fileName = &apos;my file(2).txt&apos;;</span><br><span class="line">var header = &quot;Content-Disposition: attachment; filename*=UTF-8&apos;&apos;&quot; </span><br><span class="line">             + encodeRFC5987ValueChars(fileName);</span><br><span class="line"></span><br><span class="line">console.log(header); </span><br><span class="line">// 输出 &quot;Content-Disposition: attachment; filename*=UTF-8&apos;&apos;my%20file%282%29.txt&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function encodeRFC5987ValueChars (str) &#123;</span><br><span class="line">    return encodeURIComponent(str).</span><br><span class="line">        // 注意，仅管 RFC3986 保留 &quot;!&quot;，但 RFC5987 并没有</span><br><span class="line">        // 所以我们并不需要过滤它</span><br><span class="line">        replace(/[&apos;()]/g, escape). // i.e., %27 %28 %29</span><br><span class="line">        replace(/\*/g, &apos;%2A&apos;).</span><br><span class="line">            // 下面的并不是 RFC5987 中 URI 编码必须的</span><br><span class="line">            // 所以对于 |`^ 这3个字符我们可以稍稍提高一点可读性</span><br><span class="line">            replace(/%(?:7C|60|5E)/g, unescape);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="decodeURIComponent"><a href="#decodeURIComponent" class="headerlink" title="decodeURIComponent"></a>decodeURIComponent</h3><ul><li>用于解码由 encodeURIComponent 方法或者其它类似方法编码的部分统一资源标识符（URI）</li><li>将已编码 URI 中所有能识别的转义序列转换成原字符<br>栗子：(from MDN web docs)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">decodeURIComponent(&quot;JavaScript_%D1%88%D0%B5%D0%BB%D0%BB%D1%8B&quot;);</span><br><span class="line">// &quot;JavaScript_шеллы&quot;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="getBoundingClientRect"><a href="#getBoundingClientRect" class="headerlink" title="getBoundingClientRect()"></a>getBoundingClientRect()</h2><ul><li>返回元素在视口坐标中的位置，返回一个有left、right、top、bottom属性的对象。</li><li>left和top属性表示元素的左上角的X和Y坐标，right和bottom属性表示元素右下角的X和Y坐标</li><li>在很多浏览器中，还返回 width和height，在是在ie中未实现</li><li>不是实时的，在用户滚动或改变浏览器窗口大小时不会更新</li></ul><p>栗子：（from JavaScript权威指南）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">var box = e.getBoundingClientRect(); //获得在视口坐标中的位置</span><br><span class="line">var offsets = getScrollOffsets();</span><br><span class="line">var x = box.left + offset.x;</span><br><span class="line">var y = box.top + offset.y</span><br><span class="line">var w = box.width || (box.right - box.left);</span><br><span class="line">var h = box.height || (box.bottom - box.top);</span><br><span class="line"></span><br><span class="line">// 滚动条位置</span><br><span class="line">function getScrollOffsets(w)&#123;</span><br><span class="line">    w = w || window;</span><br><span class="line"></span><br><span class="line">    // 除ie8- 版本，其他浏览器都能用</span><br><span class="line">    if(w.pageXOffset != null) return &#123;x: w.pageXOffset, y: w.pageYOffset&#125;;</span><br><span class="line"></span><br><span class="line">    // 对标准模式下的浏览器</span><br><span class="line">    var d = w.document;</span><br><span class="line">    if(document.compatMode == &quot;CSS1Compat&quot;)&#123;</span><br><span class="line">        return &#123;x: d.documentElement.scrollLeft, y： d.documentElement.scrollTop&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 对怪异模式下的浏览器</span><br><span class="line">    return &#123;x: d.body.scrollLeft, y: d.body.scrollTop&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="createDocumentFragment"><a href="#createDocumentFragment" class="headerlink" title="createDocumentFragment"></a>createDocumentFragment</h2><ul><li>作为其他节点的一个临时容器，是独立的，通常用在 创建文档片段，将元素附加到文档片段，然后将文档片段附加到DOM树<br>栗子：（from JavaScript权威指南）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 倒叙排列节点n的子节点</span><br><span class="line">function reverse(n)&#123;</span><br><span class="line">    // 创建一个DocumentFragment作为临时容器</span><br><span class="line">    var f = document.createDocumentFragment();</span><br><span class="line"></span><br><span class="line">    // 从后至前循环子节点，将每一个子节点移动到文档片段中</span><br><span class="line">    // 注意：给f添加一个节点，改节点自动的会从n中删除</span><br><span class="line">    while(n.lastChild) f.appendChild(n.lastChild);</span><br><span class="line"></span><br><span class="line">    // 把f 的所有子节点一次性全部移回n中</span><br><span class="line">    n.appendChild(f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="defaultView-getComputedStyle"><a href="#defaultView-getComputedStyle" class="headerlink" title="defaultView / getComputedStyle()"></a>defaultView / getComputedStyle()</h2><h3 id="defaultView"><a href="#defaultView" class="headerlink" title="defaultView"></a>defaultView</h3><ul><li>在浏览器中，该属性返回当前 document 对象所关联的 window 对象，如果没有，会返回 null</li><li>只读</li><li>IE 9 以下版本不支持</li><li>使用方式： document.defaultView</li></ul><h3 id="getComputedStyle"><a href="#getComputedStyle" class="headerlink" title="getComputedStyle"></a>getComputedStyle</h3><ul><li>是一个可以获取当前元素所有最终使用的CSS属性值，返回的是一个CSS样式声明对象([object CSSStyleDeclaration])，只读</li><li>语法：window.getComputedStyle(element, [pseudoElt]);</li><li>element:用于获取计算样式的Element</li><li>pseudoElt: 可选，指定一个要匹配的伪元素的字符串。必须对普通元素省略（或null）。</li></ul><p>栗子1：（from MDN web docs）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let elem1 = document.getElementById(&quot;elemId&quot;);</span><br><span class="line">let style = window.getComputedStyle(elem1, null);</span><br><span class="line"></span><br><span class="line">// 它等价于</span><br><span class="line">// let style = document.defaultView.getComputedStyle(elem1, null);</span><br></pre></td></tr></table></figure></p><p>栗子2：(from MDN web docs）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"> #elem-container&#123;</span><br><span class="line">   position: absolute;</span><br><span class="line">   left:     100px;</span><br><span class="line">   top:      200px;</span><br><span class="line">   height:   100px;</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;elem-container&quot;&gt;dummy&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;output&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  function getTheStyle()&#123;</span><br><span class="line">    let elem = document.getElementById(&quot;elem-container&quot;);</span><br><span class="line"></span><br><span class="line">    //getPropertyValue()返回一个DOMString含有一个指定的CSS属性的值</span><br><span class="line">    let theCSSprop = window.getComputedStyle(elem,null).getPropertyValue(&quot;height&quot;);</span><br><span class="line">    document.getElementById(&quot;output&quot;).innerHTML = theCSSprop;</span><br><span class="line">   &#125;</span><br><span class="line">  getTheStyle();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>待续。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;break continue 和 return 的用法&lt;/li&gt;
&lt;li&gt;instanceof&lt;/li&gt;
&lt;li&gt;constructor&lt;/li&gt;
&lt;li&gt;hasOwnProperty&lt;/li&gt;
&lt;li&gt;in&lt;/li&gt;
&lt;li&gt;call() / apply()&lt;/li&gt;
&lt;li&gt;forEach()&lt;/li&gt;
&lt;li&gt;cloneNode()&lt;/li&gt;
&lt;li&gt;cssText&lt;/li&gt;
&lt;li&gt;setTimeout() / setInterval()&lt;/li&gt;
&lt;li&gt;encodeURIComponent() / decodeURIComponent()&lt;/li&gt;
&lt;li&gt;getBoundingClientRect()&lt;/li&gt;
&lt;li&gt;createDocumentFragment&lt;/li&gt;
&lt;li&gt;defaultView / getComputedStyle()&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>html基础知识</title>
    <link href="http://yoursite.com/2017/04/16/base-html/"/>
    <id>http://yoursite.com/2017/04/16/base-html/</id>
    <published>2017-04-16T04:38:04.000Z</published>
    <updated>2017-05-04T13:12:44.769Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Doctype</li><li>常用元素</li><li>link和@import引入样式的区别</li><li>浏览器内核</li><li>html5</li><li>理解html语义化</li><li>html5离线存储</li><li>cookies,sessionStorage和localStorage</li><li>iframe的优缺点</li><li>label的作用</li><li>html5的form如何关闭自动完成功能</li><li>实现一个圆形可点击区域</li><li>实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致</li><li>网页验证码的作用</li><li>title和h1、b和strong、i和em的区别</li></ul><hr><a id="more"></a><p>参考：<a href="http://www.imooc.com/article/10377" target="_blank" rel="noopener">http://www.imooc.com/article/10377</a></p><h3 id="一、Doctype"><a href="#一、Doctype" class="headerlink" title="一、Doctype"></a>一、Doctype</h3><p>-&lt;!DOCTYPE&gt; 声明必须位于 HTML5 文档中的第一行，也就是位于 <html> 标签之前。该标签告知浏览器文档所使用的 HTML 规范。<br>doctype 声明不属于 HTML 标签；它是一条指令，告诉浏览器编写页面所用的标记的版本。<br>在所有 HTML 文档中规定 doctype 是非常重要的，这样浏览器就能了解预期的文档类型。<br>HTML 4.01 中的 doctype 需要对 DTD 进行引用，因为 HTML 4.01 基于 SGML。而 HTML 5 不基于 SGML，因此不需要对 DTD 进行引用，但是需要 doctype 来规范浏览器的行为（让浏览器按照它们应该的方式来运行。）。</html></p><hr><h3 id="二、常用元素"><a href="#二、常用元素" class="headerlink" title="二、常用元素"></a>二、常用元素</h3><h4 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">div - 常用块级容器，也是css layout的主要标签</span><br><span class="line">p - 段落</span><br><span class="line">ul - 无序列表</span><br><span class="line">dl - 定义列表</span><br><span class="line">ol - 排序表单</span><br><span class="line">table - 表格</span><br><span class="line">h1~h6 - 标题</span><br><span class="line">form - 交互表单</span><br><span class="line"></span><br><span class="line">pre - 格式化文本</span><br><span class="line">address - 地址</span><br><span class="line">blockquote - 块引用</span><br><span class="line">center - 居中对齐块</span><br><span class="line">dir - 目录列表</span><br><span class="line">fieldset - form控制组</span><br><span class="line">hr - 水平分割线</span><br><span class="line">menu - 菜单列表</span><br><span class="line">noframes - frames可选内容，（对于不支持frame的浏览器显示此区块内容）</span><br><span class="line">noscript - 可选脚本内容（对于不支持script的浏览器显示此内容）</span><br></pre></td></tr></table></figure><h4 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">a - 锚点</span><br><span class="line">span - 常用内联容器，定义文本内区块</span><br><span class="line">em - 强调</span><br><span class="line">i - 斜体</span><br><span class="line">img - 图片</span><br><span class="line">label - 表格标签</span><br><span class="line">input - 输入框</span><br><span class="line">textarea - 多行文本输入框</span><br><span class="line">select - 项目选择</span><br><span class="line"></span><br><span class="line">abbr - 缩写</span><br><span class="line">acronym - 首字</span><br><span class="line">b - 粗体</span><br><span class="line">br - 换行</span><br><span class="line">strike - 中划线</span><br><span class="line">u - 下划线</span><br><span class="line">strong - 粗体强调</span><br><span class="line">sub - 下标</span><br><span class="line">sup - 上标</span><br><span class="line">code - 计算机代码(引用源码的时候需要)</span><br><span class="line">samp - 定义范例计算机代码</span><br></pre></td></tr></table></figure><h4 id="空元素"><a href="#空元素" class="headerlink" title="空元素"></a>空元素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&gt; - 换行</span><br><span class="line">&lt;hr&gt; - 水平分割线</span><br><span class="line">&lt;img&gt; - 图片</span><br></pre></td></tr></table></figure><hr><h3 id="三、link和-import引入样式的区别"><a href="#三、link和-import引入样式的区别" class="headerlink" title="三、link和@import引入样式的区别"></a>三、link和@import引入样式的区别</h3><ul><li>1、link属于XHTML标签，除了可以加载css外，还可以定义RSS、rel连接属性等；@import 是css提供的一种方式，只能加CSS。</li><li>2、加载顺序不同:当一个页面被加载的时候，link引用的css会同时被加载，而@import引用的css会等到页面全部被下载完再被加载，所有有时候浏览@import加载css的页面时开始会没有样式（闪烁），网速慢的时候很明显。</li><li>3、兼容性:link无兼容问题，@import只有在ie5以上的才能识别。</li><li>4、使用dom控制样式时的差别：当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的。</li><li>5、@import可以在css中再次引入其他样式表。</li></ul><hr><h3 id="三、浏览器内核"><a href="#三、浏览器内核" class="headerlink" title="三、浏览器内核"></a>三、浏览器内核</h3><ul><li>负责对网页语法的解释并渲染网页</li></ul><p>常见的浏览器内核</p><ul><li>Trident：IE浏览器使用的内核</li><li>Gecko：Netscape6开始采用的内核，火来的Mozilla FireFox也采用了该内核</li><li>Presto:目前Opera采用的内核</li><li>Webkit：苹果公司自己的内核</li></ul><h3 id="四、html5"><a href="#四、html5" class="headerlink" title="四、html5"></a>四、html5</h3><h4 id="1、新元素"><a href="#1、新元素" class="headerlink" title="1、新元素"></a>1、新元素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">内容元素：article、footer、header、nav、section</span><br><span class="line">表单控件：calender、date、time、email、url、search</span><br><span class="line">控件元素：webworker、wesockt、Geolocation</span><br></pre></td></tr></table></figure><h4 id="2、移除的元素"><a href="#2、移除的元素" class="headerlink" title="2、移除的元素"></a>2、移除的元素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">显现层元素：basefont、big、center、font、s、strike、tt、u</span><br><span class="line">性能较差元素：frame、framest、noframes</span><br></pre></td></tr></table></figure><h4 id="3、兼容"><a href="#3、兼容" class="headerlink" title="3、兼容"></a>3、兼容</h4><ul><li>IE8/IE7/IE6支持通过document方法产生的标签，利用这一特性让这些浏览器支持HTML5新标签</li><li>使用html5shim框架</li></ul><h4 id="4、区分HTML和HTML5"><a href="#4、区分HTML和HTML5" class="headerlink" title="4、区分HTML和HTML5"></a>4、区分HTML和HTML5</h4><ul><li>DOCTYPE声明方式是区分HTML和HTML5标志的一个重要因素，还可以根据新增的结构、功能元素来加以区分</li></ul><hr><h3 id="五、理解HTML语义化"><a href="#五、理解HTML语义化" class="headerlink" title="五、理解HTML语义化"></a>五、理解HTML语义化</h3><ul><li>语义化有利于SEO，有利于搜索引擎爬虫更好的理解网页，从而获取更多的有效信息，提升网页的权重。</li><li>在没有css的时候能够清晰的看出网页的节骨，增强可读性。</li><li>便于团队开发和维护，语义化的HTML可以让开发者更容易的看明白，从而提高团队的效率和协调能力</li><li>支持多端设备的浏览器渲染。</li></ul><hr><h3 id="六、html5离线存储"><a href="#六、html5离线存储" class="headerlink" title="六、html5离线存储"></a>六、html5离线存储</h3><ul><li><p>将一些资源文件保存在本地，这样后续的页面重新加载将使用本地资源文件，在离线情况下可以继续访问web应用，同时通过一定的手法(更新相关文件或者使用相关API)，可以更新、删除离线存储等操作</p></li><li><p>基本流程：当第一次正确配置app cache后，当我们能再次访问该应用时，浏览器会首先检查manifest文件是否有变动。如果有变动就会把相应的变得跟新下来，同时改变浏览器里面的app cache，如果没有变动，就会直接把app cache的资源返回。</p></li></ul><h3 id="七、cookies-sessionStorage和localStorage"><a href="#七、cookies-sessionStorage和localStorage" class="headerlink" title="七、cookies,sessionStorage和localStorage"></a>七、cookies,sessionStorage和localStorage</h3><ul><li>共同点：都保存在浏览器端，且同源</li><li>区别：</li><li>cookie：<br>  （1）始终在同源的http请求中携带（及时不需要），即cookie在浏览器和服务器间来回传递 ；<br>  （2）有路径的概念，可以限制cookie只属于某个路径下；<br>  （3）数据不能超过4k，同时因为每次http请求都会携带cookie，所以cookie只适合保存很小的数据，如会话标识；<br>  （4）只在设置的cookie过期时间之前一直有效，即窗口或浏览器关闭；<br>  （5）在所有同源窗口中都是共享的。</li><li>sessionStorage:<br>  （1）只做本地保存，不会自动把数据发给服务器<br>  （2）数据可以达到5M或更多<br>  （3）仅当前浏览器窗口关闭前有效<br>  （4）在不同的浏览器窗口中不同享，即使是同一个页面</li><li>localStorage:<br>  （1）只做本地保存，不会自动把数据发给服务器<br>  （2）数据可以达到5M或更多<br>  （3）始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；<br>  （4）在所有同源窗口中都共享</li></ul><hr><h3 id="八、iframe的优缺点"><a href="#八、iframe的优缺点" class="headerlink" title="八、iframe的优缺点"></a>八、iframe的优缺点</h3><ul><li>优点：<br>  （1）iframe能够原封不动的把嵌入的网页展现出来。<br>  （2）如果有多个网页引用iframe，那么你只需要修改iframe的内容，就可以实现调用的每一个页面内容的更改，方便快捷。<br>  （3）网页如果为了统一风格，头部和版本都是一样的，就可以写成一个页面，用iframe来嵌套，可以增加代码的可重用。<br>  （4）如果遇到加载缓慢的第三方内容如图标和广告，这些问题可以由iframe来解决。</li><li>缺点：<br>  （1）会产生很多页面，不容易管理。<br>  （2）iframe框架结构有时会让人感到迷惑，如果框架个数多的话，可能会出现上下、左右滚动条，会分散访问者的注意力，用户体验度差。<br>  （3）代码复杂，无法被一些搜索引擎索引到，这一点很关键，现在的搜索引擎爬虫还不能很好的处理iframe中的内容，所以使用iframe会不利于搜索引擎优化。<br>  （4）很多的移动设备（PDA 手机）无法完全显示框架，设备兼容性差。<br>  （5）iframe框架页面会增加服务器的http请求，对于大型网站是不可取的。</li></ul><hr><h3 id="九、label的作用"><a href="#九、label的作用" class="headerlink" title="九、label的作用"></a>九、label的作用</h3><ul><li>label 标签为 input 元素定义标注（标记）。</li><li>label 元素不会向用户呈现任何特殊效果。不过，它为鼠标用户改进了可用性。如果您在 label 元素内点击文本，就会触发此控件。就是说，当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。</li><li>Label 中有两个属性是非常有用的,一个是FOR、另外一个就是ACCESSKEY了。<br>  FOR属性 :表示Label标签要绑定的HTML元素，你点击这个标签的时候，所绑定的元素将获取焦点。<br>  ACCESSKEY属性：功能：表示访问Label标签所绑定的元素的热键，当您按下热键，所绑定的元素将获取焦点。</li></ul><h3 id="十、html5的form如何关闭自动完成功能"><a href="#十、html5的form如何关闭自动完成功能" class="headerlink" title="十、html5的form如何关闭自动完成功能"></a>十、html5的form如何关闭自动完成功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form autocomplete=&quot;on/off&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>on 默认。规定启用自动完成功能。</li><li>off 规定禁用自动完成功能。</li></ul><hr><h3 id="十一、实现一个圆形可点击区域"><a href="#十一、实现一个圆形可点击区域" class="headerlink" title="十一、实现一个圆形可点击区域"></a>十一、实现一个圆形可点击区域</h3><ul><li>map+area 或者 svg;</li><li>border-radius;</li><li>纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等;</li></ul><hr><h3 id="十二、实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致"><a href="#十二、实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致" class="headerlink" title="十二、实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致"></a>十二、实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;height:1px;overflow:hidden;background:black&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="十三、title和h1、b和strong、i和em的区别"><a href="#十三、title和h1、b和strong、i和em的区别" class="headerlink" title="十三、title和h1、b和strong、i和em的区别"></a>十三、title和h1、b和strong、i和em的区别</h3><ul><li>title标签是用来描述这个页面的主题的，是一个网页权重的最高点。但title标签并不出现在文章的正文中。</li><li>h1标签一般出现在文章的正文中，是展示给访问者的文章的标题。所以说这两个标签不仅不冲突的，而是合作的关系。</li><li>一篇文章既要有title又要有h1标签，既突出了文章的主题，又突出了标题和关键字，达到双重优化网站的效果。一般会把title和h1标签的内容写成一样，而且一般情况下一篇文章最好只用一个h1标签，过多的h1标签反而会让搜索引擎迷糊，认不清文章的主题。</li><li><p>b与strong的区别、i与em的区别</p></li><li><p>b标签和strong标签给我们的主观感受都是加粗，但对搜索引擎来说b标签和普通的文字并没有什么区别，而strong标签却是起强调作用的。也就是说如果你想让搜索引擎认为你的某句话很重要时那就用strong标签。如果只是想让用户看到加粗的效果，那就用b标签。</p></li><li>em标签也是针对搜索引擎来起作用的，i标签只是让用户看到展示的是斜体。</li></ul><p>未完待续。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Doctype&lt;/li&gt;
&lt;li&gt;常用元素&lt;/li&gt;
&lt;li&gt;link和@import引入样式的区别&lt;/li&gt;
&lt;li&gt;浏览器内核&lt;/li&gt;
&lt;li&gt;html5&lt;/li&gt;
&lt;li&gt;理解html语义化&lt;/li&gt;
&lt;li&gt;html5离线存储&lt;/li&gt;
&lt;li&gt;cookies,sessionStorage和localStorage&lt;/li&gt;
&lt;li&gt;iframe的优缺点&lt;/li&gt;
&lt;li&gt;label的作用&lt;/li&gt;
&lt;li&gt;html5的form如何关闭自动完成功能&lt;/li&gt;
&lt;li&gt;实现一个圆形可点击区域&lt;/li&gt;
&lt;li&gt;实现不使用border画出1px高的线，在不同浏览器的Quirksmode和CSSCompat下能保持一致&lt;/li&gt;
&lt;li&gt;网页验证码的作用&lt;/li&gt;
&lt;li&gt;title和h1、b和strong、i和em的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>vue学习</title>
    <link href="http://yoursite.com/2017/04/04/vuejs/"/>
    <id>http://yoursite.com/2017/04/04/vuejs/</id>
    <published>2017-04-04T04:52:57.000Z</published>
    <updated>2017-05-21T06:16:41.566Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Vue.js组件的重要选项<ul><li>data: vue对象的数据</li><li>methods: vue对象的方法</li><li>watch: 设置了对象监听的方法</li><li>data: vue对象的数据</li></ul></li><li>模板指令——html和vue对象的粘合剂<ul><li>数据渲染</li><li>控制模块隐藏： v-if、v-show</li><li>渲染循环列表： v-for</li><li>事件绑定： v-on</li><li>属性绑定： v-bind</li></ul></li></ul><hr><a id="more"></a><h3 id="一、Vue-js组件的重要选项"><a href="#一、Vue-js组件的重要选项" class="headerlink" title="一、Vue.js组件的重要选项"></a>一、Vue.js组件的重要选项</h3><h4 id="1、data-vue对象的数据"><a href="#1、data-vue对象的数据" class="headerlink" title="1、data: vue对象的数据"></a>1、data: vue对象的数据</h4><h4 id="2、methods-vue对象的方法"><a href="#2、methods-vue对象的方法" class="headerlink" title="2、methods: vue对象的方法"></a>2、methods: vue对象的方法</h4><h4 id="3、watch-设置了对象监听的方法"><a href="#3、watch-设置了对象监听的方法" class="headerlink" title="3、watch: 设置了对象监听的方法"></a>3、watch: 设置了对象监听的方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&#123;&#123; a &#125;&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        a: 1,</span><br><span class="line">        b: []</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        doSometh: function()&#123;</span><br><span class="line">            console.log(this.a)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">        &apos;a&apos;: function(val, oldVal)&#123;</span><br><span class="line">                console.log(val, oldVal)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h3 id="二、模板指令——html和vue对象的粘合剂"><a href="#二、模板指令——html和vue对象的粘合剂" class="headerlink" title="二、模板指令——html和vue对象的粘合剂"></a>二、模板指令——html和vue对象的粘合剂</h3><h4 id="1、数据渲染："><a href="#1、数据渲染：" class="headerlink" title="1、数据渲染："></a>1、数据渲染：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-text、v-html、 &#123;&#123; &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&#123;&#123; a &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;p v-text=&quot;a&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;p v-html=&quot;a&quot;&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">    data: [</span><br><span class="line">        a: 1,</span><br><span class="line">        b: []</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2、控制模块隐藏：-v-if、v-show"><a href="#2、控制模块隐藏：-v-if、v-show" class="headerlink" title="2、控制模块隐藏： v-if、v-show"></a>2、控制模块隐藏： v-if、v-show</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;p v-if=&quot;isShow&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;p v-show=&quot;isShow&quot;&gt;&lt;/p&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        isShow: true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="3、渲染循环列表：-v-for"><a href="#3、渲染循环列表：-v-for" class="headerlink" title="3、渲染循环列表： v-for"></a>3、渲染循环列表： v-for</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&apos;item in items&apos;&gt;</span><br><span class="line">        &lt;p v-text=&apos;item.label&apos;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">data: &#123;</span><br><span class="line">    items: [</span><br><span class="line">        &#123;</span><br><span class="line">            label: &apos;apple&apos;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            label: &apos;banana&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、事件绑定：-v-on"><a href="#4、事件绑定：-v-on" class="headerlink" title="4、事件绑定： v-on"></a>4、事件绑定： v-on</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click=&quot;doThis&quot;&gt;&lt;/button&gt;</span><br><span class="line">&lt;button @click=&quot;doThis&quot;&gt;&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">nethods: &#123;</span><br><span class="line">    doThis: function(someThing)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h4 id="5、属性绑定：-v-bind"><a href="#5、属性绑定：-v-bind" class="headerlink" title="5、属性绑定： v-bind"></a>5、属性绑定： v-bind</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;img v-bind:src=&quot;&quot; alt=&quot;&quot;&gt;  //字符串</span><br><span class="line">&lt;img :src=&quot;&quot; alt=&quot;&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;div ：class=&quot;&#123; red: isRed &#125;&quot;&gt;&lt;/div&gt; //布尔值</span><br><span class="line">&lt;div ：class=&quot;[classA, classB]&quot;&gt;&lt;/div&gt; //</span><br><span class="line">&lt;div ：class=&quot;[classA, &#123;classB: isB, classC： isC&#125;]&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>未完待续。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Vue.js组件的重要选项&lt;ul&gt;
&lt;li&gt;data: vue对象的数据&lt;/li&gt;
&lt;li&gt;methods: vue对象的方法&lt;/li&gt;
&lt;li&gt;watch: 设置了对象监听的方法&lt;/li&gt;
&lt;li&gt;data: vue对象的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;模板指令——html和vue对象的粘合剂&lt;ul&gt;
&lt;li&gt;数据渲染&lt;/li&gt;
&lt;li&gt;控制模块隐藏： v-if、v-show&lt;/li&gt;
&lt;li&gt;渲染循环列表： v-for&lt;/li&gt;
&lt;li&gt;事件绑定： v-on&lt;/li&gt;
&lt;li&gt;属性绑定： v-bind&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="tool" scheme="http://yoursite.com/tags/tool/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Sass学习</title>
    <link href="http://yoursite.com/2017/03/27/sass/"/>
    <id>http://yoursite.com/2017/03/27/sass/</id>
    <published>2017-03-27T07:58:57.000Z</published>
    <updated>2017-05-07T08:03:11.142Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="http://www.ruanyifeng.com/blog/2012/06/sass.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2012/06/sass.html</a></p><ul><li>安装 <a href="https://www.sass.hk/install/" target="_blank" rel="noopener">点击查看</a></li><li>调试 <a href="http://www.w3cplus.com/preprocessor/sass-debug-with-developer-tool.html" target="_blank" rel="noopener">点击查看</a></li><li>编译 <a href="http://www.w3cplus.com/preprocessor/sass-compile.html" target="_blank" rel="noopener">点击查看</a></li><li>常用命令</li><li>基本用法</li><li>代码重用</li><li>高级用法</li></ul><hr><a id="more"></a><h2 id="一、常用命令"><a href="#一、常用命令" class="headerlink" title="一、常用命令"></a>一、常用命令</h2><ul><li><p>项目中常用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch sass:css --style compact</span><br></pre></td></tr></table></figure></li><li><p>格式转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass-convert style.sass style.scss</span><br></pre></td></tr></table></figure></li><li><p>运行sass</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass input.css output.css</span><br></pre></td></tr></table></figure></li><li><p>监视sass文件，每次更新时，自动编译成css</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch input.scss: output.css</span><br></pre></td></tr></table></figure></li><li><p>监视整个文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch app/sass:public/stylesheets</span><br></pre></td></tr></table></figure></li><li><p>更多命令行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --help</span><br></pre></td></tr></table></figure></li><li><p>紧凑输出方式 campact</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch test.scss:test.css --style compact</span><br></pre></td></tr></table></figure></li><li><p>压缩输出方式 campact</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --watch test.scss:test.css --style compressed</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="二、基本用法"><a href="#二、基本用法" class="headerlink" title="二、基本用法"></a>二、基本用法</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li><p>使用$开头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$blue : #1875e7;</span><br><span class="line">div&#123;</span><br><span class="line">    color: $blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>如果变量需要镶嵌在字符串中，就必须需要写在#{}之中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$side: left;</span><br><span class="line">.rounded &#123;</span><br><span class="line">    border-#&#123;$side&#125;-radius: 5px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="计算功能"><a href="#计算功能" class="headerlink" title="计算功能"></a>计算功能</h3><ul><li>例如<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$var: 500px;</span><br><span class="line">body&#123;</span><br><span class="line">    margin: (14px/2);</span><br><span class="line">    top:50px + 100px;</span><br><span class="line">    right:$var * 10%</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h3><ul><li><p>标签嵌套</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">    h1&#123;</span><br><span class="line">        color:red;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>属性嵌套</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p&#123;</span><br><span class="line">    border:&#123;</span><br><span class="line">        color:red;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>伪类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a &#123;</span><br><span class="line">    &amp;:hover&#123;</span><br><span class="line">        color:#ffb3ff;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><p>会保留到编译后的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/*  */</span><br></pre></td></tr></table></figure></li><li><p>只保留在sass源文件中，编译后被省略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//</span><br></pre></td></tr></table></figure></li><li><p>主要注释，即使是压缩模式编译，也会保留这行注释，通常用作声明版权信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/*!</span><br><span class="line">    重要注释</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="三、代码重用"><a href="#三、代码重用" class="headerlink" title="三、代码重用"></a>三、代码重用</h2><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><ul><li>例如<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.class1&#123;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.class2&#123;</span><br><span class="line">    @extend .class1;</span><br><span class="line">    font-size: 120%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Mixin"><a href="#Mixin" class="headerlink" title="Mixin"></a>Mixin</h3><ul><li><p>可以重用的代码块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@mixin left($value: 10px)&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    margin-right: $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div&#123;</span><br><span class="line">    @include left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>可以指定参数和缺省值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@mixin rounded($vert, $horz, $radius: 10px)&#123;</span><br><span class="line">    border-#&#123;$vert&#125;-#&#123;$horz&#125;-radius: $radius;</span><br><span class="line">    -moz-border-#&#123;$vert&#125;-#&#123;$horz&#125;-radius: $radius;</span><br><span class="line">    -webkit-border-#&#123;$vert&#125;-#&#123;$horz&#125;-radius: $radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#navbar li&#123;</span><br><span class="line">    @include rounded(top, left);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#footer&#123;</span><br><span class="line">    @include rounded(top, left, 5px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="颜色函数"><a href="#颜色函数" class="headerlink" title="颜色函数"></a>颜色函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lighten(#cc3, 10%) // #d6d65c</span><br><span class="line">darken(#cc3, 10%) // #a3a329</span><br><span class="line">grayscale(#cc3) // #808080</span><br><span class="line">complement(#cc3) // #33c</span><br></pre></td></tr></table></figure><h3 id="插入文件"><a href="#插入文件" class="headerlink" title="插入文件"></a>插入文件</h3><ul><li><p>@import命令，用来插入外部文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　@import &quot;path/filename.scss&quot;;</span><br></pre></td></tr></table></figure></li><li><p>如果插入的是.css文件，则等同于css的import命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　@import &quot;foo.css&quot;;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="四、高级用法"><a href="#四、高级用法" class="headerlink" title="四、高级用法"></a>四、高级用法</h2><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><ul><li><p>例1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">    @if 1 + 1 == 2 &#123; border:1px solid #eee; &#125;</span><br><span class="line"></span><br><span class="line">    @if 5 &lt; 3 &#123; border:2px dotted #eee; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line"></span><br><span class="line">p &#123;  border: 1px solid #eee; &#125;</span><br></pre></td></tr></table></figure></li><li><p>例2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">p&#123;</span><br><span class="line">    @if lightness($color) &gt; 30% &#123;</span><br><span class="line">        background-color: #000;</span><br><span class="line">    &#125; @else &#123;</span><br><span class="line">        background-color: #fff;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line">p &#123;  background-color: #000; &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h4><ul><li><p>for循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@for $i from 1 to 10&#123;</span><br><span class="line">    .border-#&#123;$i&#125;&#123;</span><br><span class="line">        border: #&#123;$i&#125;px solid blue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line">.border-1 &#123;border: 1px solid blue; &#125;</span><br><span class="line">.border-2 &#123;border: 2px solid blue; &#125;</span><br><span class="line">.border-3 &#123;border: 3px solid blue; &#125;</span><br><span class="line">.border-4 &#123;border: 4px solid blue; &#125;</span><br><span class="line">.border-5 &#123;border: 5px solid blue; &#125;</span><br><span class="line">.border-6 &#123;border: 6px solid blue; &#125;</span><br><span class="line">.border-7 &#123;border: 7px solid blue; &#125;</span><br><span class="line">.border-8 &#123;border: 8px solid blue; &#125;</span><br><span class="line">.border-9 &#123;border: 9px solid blue; &#125;</span><br></pre></td></tr></table></figure></li><li><p>while循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$i: 6;</span><br><span class="line">@while $i &gt; 0&#123;</span><br><span class="line">    .item-#&#123;$i&#125;&#123;</span><br><span class="line">        width: 2em * $i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $i: $i - 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line">.item-6 &#123;width: 12em; &#125;</span><br><span class="line">.item-4 &#123;width: 8em; &#125;</span><br><span class="line">.item-2 &#123;width: 4em; &#125;</span><br></pre></td></tr></table></figure></li><li><p>each</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@each $member in a,b,c,d&#123;</span><br><span class="line">    .#&#123;$member&#125; &#123;</span><br><span class="line">        background-image:url(&quot;/image/#&#123;$member&#125;.jpg&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line">.a &#123;background-image: url(&quot;/image/a.jpg&quot;); &#125;</span><br><span class="line">.b &#123;background-image: url(&quot;/image/b.jpg&quot;); &#125;</span><br><span class="line">.c &#123;background-image: url(&quot;/image/c.jpg&quot;); &#125;</span><br><span class="line">.d &#123;background-image: url(&quot;/image/d.jpg&quot;); &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><ul><li>例如：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@function double($n)&#123;</span><br><span class="line">    @return $n * 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#sidebar &#123;</span><br><span class="line">    width: double(5px);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于：</span><br><span class="line">#sidebar &#123; width: 10px; &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/06/sass.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.ruanyifeng.com/blog/2012/06/sass.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装 &lt;a href=&quot;https://www.sass.hk/install/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击查看&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;调试 &lt;a href=&quot;http://www.w3cplus.com/preprocessor/sass-debug-with-developer-tool.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击查看&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;编译 &lt;a href=&quot;http://www.w3cplus.com/preprocessor/sass-compile.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击查看&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;常用命令&lt;/li&gt;
&lt;li&gt;基本用法&lt;/li&gt;
&lt;li&gt;代码重用&lt;/li&gt;
&lt;li&gt;高级用法&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="tool" scheme="http://yoursite.com/tags/tool/"/>
    
      <category term="sass" scheme="http://yoursite.com/tags/sass/"/>
    
  </entry>
  
</feed>
